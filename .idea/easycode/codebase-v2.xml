<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/src/main/java/org/example/audio_ecommerce/config/CategoryInitializer.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/config/DataInitializer.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/config/OpenApiConfig.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/config/SecurityConfig.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/AccountController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/CartController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/CategoryController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/CustomerController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/PlatformWalletController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/ProductComboController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/ProductController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/StoreController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/StoreKycController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/StoreWalletController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/TestController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/controller/WalletController.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/AddCartItemsRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/AddressCreateRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/AddressUpdateRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/CategoryRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/CreateComboRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/CreateProductRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/CustomerCreateRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/CustomerUpdateRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/LoginRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/PlatformTransactionFilterRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/ProductRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/RegisterRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/StoreKycRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/ToggleItemRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/UpdateComboRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/UpdateProductRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/UpdateQtyRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreStatusRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/request/WalletTxnRequest.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/AccountResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/AddressResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/BaseResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/CartResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/ComboResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/CustomerResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/LoginResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/PagedResult.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/PlatformTransactionResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/PlatformWalletResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/ProductResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/RegisterResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/StoreResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletSummaryResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletTransactionResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/UpdateStoreResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/WalletResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/dto/response/WalletTransactionResponse.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/AddressLabel.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/CartItemType.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/CartStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/CategoryEnum.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/CustomerStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/Gender.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/KycStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/LoyaltyLevel.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/ProductStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/RoleEnum.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreWalletTransactionType.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionType.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletOwnerType.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionStatus.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionType.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Account.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/BaseEntity.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Cart.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/CartItem.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Category.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Customer.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/CustomerAddress.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/PlatformTransaction.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/PlatformWallet.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Product.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/ProductCombo.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Store.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/StoreKyc.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/StoreWallet.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/StoreWalletTransaction.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/Wallet.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/entity/WalletTransaction.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/exception/ApiError.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/exception/ExternalApiException.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/exception/GlobalExceptionHandler.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/AccountRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/CartItemRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/CartRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/CategoryRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/CustomerAddressRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/CustomerRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/PlatformTransactionRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/PlatformWalletRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/ProductComboRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/ProductRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/StoreKycRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/StoreRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/StoreWalletRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/StoreWalletTransactionRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/WalletRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/repository/WalletTransactionRepository.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/security/oauth/CustomOAuth2UserService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationFailureHandler.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationSuccessHandler.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/security/JwtFilter.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/security/JwtTokenProvider.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/AccountServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/CartServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/CategoryServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/CustomerServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/CustomUserDetailsService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/DomainProvisioningService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformWalletServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/ProductComboServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/ProductServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/StoreKycServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/StoreServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/StoreWalletServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/Impl/WalletServiceImpl.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/AccountService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/CartService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/CategoryService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/CustomerService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/PlatformWalletService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/ProductComboService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/ProductService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/StoreKycService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/StoreService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/StoreWalletService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/service/WalletService.java;D:/DO_AN/doan/Audio_E-commerce/src/main/java/org/example/audio_ecommerce/AudioECommerceApplication.java;D:/DO_AN/doan/Audio_E-commerce/src/test/java/org/example/audio_ecommerce/AudioECommerceApplicationTests.java;D:/DO_AN/doan/Audio_E-commerce/HELP.md" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;D:/DO_AN/doan/Audio_E-commerce&quot;:&quot;{\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWallet.java\&quot;:\&quot;This file defines the `StoreWallet` entity, which represents a wallet associated with a store in an e-commerce application. The entity has various fields to track the store\\u0027s available balance, deposit balance, pending balance, and total revenue, as well as the associated transactions.\\n\\n`StoreWallet`: An entity that represents a wallet associated with a store, containing information about the store\\u0027s financial balances and transactions.\\n\\n`walletId`: A unique identifier for the store wallet, generated using a UUID.\\n`store`: A one-to-one relationship with the `Store` entity, representing the store associated with this wallet.\\n`availableBalance`: The available balance in the store\\u0027s wallet.\\n`depositBalance`: The deposit or security balance in the store\\u0027s wallet.\\n`pendingBalance`: The pending balance in the store\\u0027s wallet.\\n`totalRevenue`: The total revenue generated by the store.\\n`createdAt`: The timestamp when the store wallet was created.\\n`updatedAt`: The timestamp when the store wallet was last updated.\\n`transactions`: A one-to-many relationship with the `StoreWalletTransaction` entity, representing the transactions associated with this wallet.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformTransaction.java\&quot;:\&quot;This file defines a JPA entity class `PlatformTransaction` that represents a transaction in an audio e-commerce platform. The class has several fields to store information about the transaction, such as the wallet, order ID, store ID, customer ID, amount, transaction type, transaction status, description, and timestamps for creation and update.\\n\\n`PlatformTransaction`: A JPA entity class that represents a transaction in an audio e-commerce platform.\\n\\nThere are no functions defined in this file. The file is focused on defining the structure and properties of the `PlatformTransaction` entity class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformFeeService.java\&quot;:\&quot;This file defines an interface for a `PlatformFeeService` that manages the platform fees for an audio e-commerce application.\\n\\n`PlatformFeeService`: An interface that provides methods for creating, updating, retrieving, and listing platform fees.\\n\\n`create(PlatformFee fee)`: Creates a new platform fee.\\n`update(UUID id, PlatformFee fee)`: Updates an existing platform fee.\\n`getActiveFee()`: Retrieves the currently active platform fee.\\n`getAll()`: Retrieves a list of all platform fees.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletTransactionResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`WalletTransactionResponse`: A data transfer object (DTO) that represents a wallet transaction response, containing information such as the transaction ID, wallet ID, order ID, transaction type, status, amount, balance before and after the transaction, description, and the transaction creation timestamp.\\n\\nThis file does not contain any functions. It is a simple DTO class used to represent the response data for a wallet transaction.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/AudioECommerceApplication.java\&quot;:\&quot;This file is the main entry point for the Spring Boot application \\\&quot;AudioECommerceApplication\\\&quot;. It enables asynchronous processing and starts the Spring Boot application.\\n\\n`AudioECommerceApplication`: This is the main class that bootstraps the Spring Boot application.\\n\\n`main(String[] args)`: This is the main method that runs the Spring Boot application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreKycService.java\&quot;:\&quot;This file defines an interface called `StoreKycService` that provides methods for managing the KYC (Know Your Customer) process for stores in an e-commerce application.\\n\\n`StoreKycService`: Provides methods for managing the KYC process for stores.\\n\\n`submitKyc`: Submits a KYC request for a store.\\n`approveKyc`: Approves a KYC request.\\n`rejectKyc`: Rejects a KYC request with a reason.\\n`getAllRequestsOfStore`: Retrieves all KYC requests for a specific store.\\n`getRequestDetail`: Retrieves the details of a specific KYC request.\\n`getRequestsByStatus`: Retrieves KYC requests by their status.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformTransactionRepository.java\&quot;:\&quot;This file contains a Java interface named `PlatformTransactionRepository` that extends the `JpaRepository` interface. The purpose of this interface is to provide a set of methods for querying and managing `PlatformTransaction` entities in a database.\\n\\n`PlatformTransactionRepository`: An interface that provides methods for querying and managing `PlatformTransaction` entities in a database.\\n\\n`findByStoreId`: Retrieves a list of `PlatformTransaction` entities based on the provided `storeId`.\\n\\n`findByStatus`: Retrieves a list of `PlatformTransaction` entities based on the provided `TransactionStatus`.\\n\\n`findByType`: Retrieves a list of `PlatformTransaction` entities based on the provided `TransactionType`.\\n\\n`findByDateRange`: Retrieves a list of `PlatformTransaction` entities based on the provided date range.\\n\\n`filterTransactions`: Retrieves a list of `PlatformTransaction` entities based on the provided filters (store ID, customer ID, transaction status, transaction type, and date range).\&quot;,\&quot;/src/test/java/org/example/audio_ecommerce/AudioECommerceApplicationTests.java\&quot;:\&quot;This file appears to be a test class for the `AudioECommerceApplication` class. It does not contain any classes or functions, but rather a single test method `contextLoads()` that is used to ensure the Spring Boot application context can be loaded successfully.\\n\\nThe file serves as a basic integration test for the `AudioECommerceApplication` class, which is likely the main entry point for the audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/RoleEnum.java\&quot;:\&quot;This file defines an enumeration called `RoleEnum` that represents different roles in an audio e-commerce application.\\n\\n`RoleEnum`: An enumeration that represents different roles in the audio e-commerce application, such as ADMIN, GUEST, STAFF, CUSTOMER, and STOREOWNER.\\n\\n`getValue()`: A method that returns the integer value associated with each role in the `RoleEnum` enumeration.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/config/OpenApiConfig.java\&quot;:\&quot;This file is a Spring Boot configuration class that sets up the OpenAPI (Swagger) documentation for the Audio System application.\\n\\n`OpenApiConfig`: This class configures the OpenAPI documentation for the application.\\n\\n`api()`: This method creates an `OpenAPI` instance with the necessary security requirements and information about the API.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletStatus.java\&quot;:\&quot;This file contains an enumeration (enum) named `WalletStatus`, which represents the different states a wallet can have in an audio e-commerce application.\\n\\n`WalletStatus`: An enumeration that defines the possible states of a wallet, including `ACTIVE`, `INACTIVE`, and `LOCKED`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/WalletServiceImpl.java\&quot;:\&quot;This file is an implementation of the `WalletService` interface, which provides functionality for managing customer wallets and their transactions.\\n\\n`WalletServiceImpl`: Implements the `WalletService` interface, providing methods for managing customer wallets and their transactions.\\n\\n`getByCustomer`: Retrieves the wallet for a given customer ID.\\n`deposit`: Performs a deposit transaction for a given customer ID and transaction request.\\n`withdraw`: Performs a withdrawal transaction for a given customer ID and transaction request.\\n`payment`: Performs a payment transaction for a given customer ID and transaction request, handling idempotency.\\n`refund`: Performs a refund transaction for a given customer ID and transaction request.\\n`listTransactions`: Retrieves a paginated list of wallet transactions for a given customer ID.\\n`doChangeBalance`: Handles the core logic for updating a wallet\\u0027s balance and creating a new wallet transaction.\\n`toWalletResponse`: Maps a `Wallet` entity to a `WalletResponse` DTO.\\n`toTxnResponse`: Maps a `WalletTransaction` entity to a `WalletTransactionResponse` DTO.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressCreateRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`AddressCreateRequest`: A data transfer object (DTO) that represents a request to create a new address for an e-commerce application.\\n\\nThe file does not contain any functions. Instead, it defines the structure of the `AddressCreateRequest` class, which includes various fields such as the receiver\\u0027s name, phone number, address details, and whether the address should be set as the default.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerAddressRepository.java\&quot;:\&quot;This file contains a single interface `CustomerAddressRepository` that extends the `JpaRepository` interface provided by Spring Data JPA.\\n\\n`CustomerAddressRepository`: An interface that provides CRUD operations and custom query methods for the `CustomerAddress` entity.\\n\\n`findByCustomerIdOrderByIsDefaultDescCreatedAtDesc(UUID customerId)`: Retrieves a list of `CustomerAddress` entities for the given `customerId`, ordered by the `isDefault` field in descending order and the `createdAt` field in descending order.\\n\\n`findByIdAndCustomerId(UUID id, UUID customerId)`: Retrieves an optional `CustomerAddress` entity with the given `id` and `customerId`.\\n\\n`countByCustomerId(UUID customerId)`: Counts the number of `CustomerAddress` entities for the given `customerId`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreStatusRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`UpdateStoreStatusRequest`: A data transfer object (DTO) that represents a request to update the status of a store.\\n\\nThis file does not contain any functions. The purpose of this file is to define a DTO that can be used to update the status of a store in an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreWalletTransactionType.java\&quot;:\&quot;This file does not contain any classes or functions. It defines an enumeration called `StoreWalletTransactionType` that represents different types of transactions related to a store\\u0027s wallet, such as deposits, pending holds, release of pending funds, withdrawals, refunds, and manual adjustments.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`StoreResponse`: A data transfer object (DTO) that represents the response for a store in an audio e-commerce application, containing information such as the store\\u0027s ID, name, description, logo, cover image, address, phone number, email, rating, status, and associated account ID.\\n\\nThis file does not contain any functions. It is a simple DTO class used to transfer store-related data between the application\\u0027s layers.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformFeeRepository.java\&quot;:\&quot;This file contains a single interface `PlatformFeeRepository` that extends the `JpaRepository` interface provided by Spring Data JPA.\\n\\n`PlatformFeeRepository`: An interface that provides methods for interacting with the `PlatformFee` entity in the database, including finding the active `PlatformFee` record.\\n\\n`findByIsActiveTrue()`: A method that returns an `Optional` containing the active `PlatformFee` record, if one exists.\&quot;,\&quot;/src/main/resources/templates/email/welcome_admin.html\&quot;:\&quot;This file appears to be an HTML template for an email or web page that welcomes an admin user to a website. It does not contain any classes or functions, but rather displays a greeting, a link to the admin console, and a closing message.\\n\\nThe file performs the following tasks:\\n\\n1. Displays a greeting to the admin user, using a variable `${name}` to insert the user\\u0027s name.\\n2. Informs the user that their admin account has been created.\\n3. Provides a link to the admin console, using the variable `${siteUrl}` to construct the URL.\\n4. Includes a closing message from the \\\&quot;AudioEcommerce\\\&quot; team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CustomerResponse.java\&quot;:\&quot;This file contains a single class, `CustomerResponse`, which is a data transfer object (DTO) used to represent a customer\\u0027s information in an e-commerce application.\\n\\n`CustomerResponse`: A DTO class that encapsulates the relevant information about a customer, including their personal details, account status, loyalty program information, and order history.\\n\\nThis file does not contain any functions, as it is a simple data class used to transfer customer data between different parts of the application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/ProductStatus.java\&quot;:\&quot;This file defines an `Enum` called `ProductStatus` which represents the different statuses a product can have in an audio e-commerce application.\\n\\n`ProductStatus`: An enumeration that represents the different statuses a product can have, such as `DRAFT`, `ACTIVE`, `INACTIVE`, `OUT_OF_STOCK`, and `DISCONTINUED`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/DomainProvisioningService.java\&quot;:\&quot;This file contains a service class `DomainProvisioningService` that handles the creation of customer and store entities in an audio e-commerce application.\\n\\n`DomainProvisioningService`: A service class that ensures the creation of customer and wallet entities, and optionally creates a default store for store owners.\\n\\n`ensureCustomerAndWallet`: A transactional method that creates a customer and a default wallet if they do not already exist for a given account.\\n\\n`ensureDefaultStore`: An optional transactional method that creates a default store for a store owner account if it does not already exist.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateQtyRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`UpdateQtyRequest`: A data transfer object (DTO) that represents a request to update the quantity of an item.\\n\\nThis file does not contain any functions. It simply defines a DTO class with a single property, `quantity`, which represents the new quantity to be updated.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AccountResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`AccountResponse`: A data transfer object (DTO) that represents the response for an account, containing the user\\u0027s email, full name, and role.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate and transfer account-related data between different layers of the application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletOwnerType.java\&quot;:\&quot;This file defines an enumeration called `WalletOwnerType` which represents the different types of wallets in an audio e-commerce system. The enumeration has three values:\\n\\n`PLATFORM`: Represents the platform\\u0027s intermediate wallet that holds all the money before it is released.\\n`SHOP`: Represents the individual wallet for each shop.\\n`CUSTOMER`: Represents the customer\\u0027s refund wallet.\\n\\nThis file does not contain any classes or functions, but rather defines an enumeration that can be used throughout the application to represent the different types of wallets.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Account.java\&quot;:\&quot;This file defines the `Account` entity class, which is used to represent user accounts in an audio e-commerce application.\\n\\n`Account`: This class represents a user account in the audio e-commerce application, with fields for the user\\u0027s name, email, password, phone, and role.\\n\\n`name`: The user\\u0027s name.\\n`email`: The user\\u0027s email address.\\n`password`: The user\\u0027s password.\\n`phone`: The user\\u0027s phone number.\\n`role`: The user\\u0027s role, which is an enumeration of possible roles (e.g., \\\&quot;ADMIN\\\&quot;, \\\&quot;CUSTOMER\\\&quot;).\\n`store`: A one-to-one relationship with the `Store` entity, representing the user\\u0027s store (if they have one).\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateComboRequest.java\&quot;:\&quot;This file contains a single class, `UpdateComboRequest`, which is a data transfer object (DTO) used to update the information of a product combo in an e-commerce application.\\n\\n`UpdateComboRequest`: A DTO class that holds the updated information for a product combo, including the category ID, basic information, media, shipping details, pricing, and a list of included product IDs.\\n\\nThis file does not contain any functions. It is a data transfer object used to update the information of a product combo in an e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreKycRepository.java\&quot;:\&quot;This file contains a repository interface for the `StoreKyc` entity, which is used to manage the KYC (Know Your Customer) process for stores in an e-commerce application.\\n\\n`StoreKycRepository`: This interface extends the `JpaRepository` interface and provides methods for interacting with the `StoreKyc` entity in the database.\\n\\n`existsByStore_StoreIdAndStatus`: This method checks if a `StoreKyc` entity exists for a given store ID and KYC status.\\n\\n`findByStore_StoreIdOrderByCreatedAtDesc`: This method retrieves a list of `StoreKyc` entities for a given store ID, ordered by the creation date in descending order.\\n\\n`findByStatusOrderBySubmittedAtDesc`: This method retrieves a list of `StoreKyc` entities for a given KYC status, ordered by the submission date in descending order.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateComboRequest.java\&quot;:\&quot;This file contains a single class, `CreateComboRequest`, which is a data transfer object (DTO) used to represent the request data for creating a new combo product in an e-commerce application.\\n\\n`CreateComboRequest`: A DTO class that holds the necessary information for creating a new combo product, including the store ID, category ID, product details, images, shipping information, and a list of included product IDs.\\n\\nThe file does not contain any functions, but rather defines the structure and properties of the `CreateComboRequest` class using Lombok annotations for generating getters, setters, constructors, and a builder pattern.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/StoreKycRequest.java\&quot;:\&quot;This file contains a single class, `StoreKycRequest`, which is a data transfer object (DTO) used to represent the request data for a store\\u0027s KYC (Know Your Customer) process.\\n\\n`StoreKycRequest`: A DTO class that holds the necessary information for a store\\u0027s KYC process, including the store name, phone number, business license number, tax code, bank details, and URLs for identity documents and business license.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate the data required for a store\\u0027s KYC request.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreWalletController.java\&quot;:\&quot;This file contains a Spring Boot REST controller class for managing a store\\u0027s wallet transactions.\\n\\n`StoreWalletController`: A REST controller class that provides APIs for managing a store\\u0027s wallet, including retrieving the current wallet information, listing wallet transactions, and filtering wallet transactions based on various criteria.\\n\\n`getMyWallet()`: Retrieves the current wallet information for the authenticated store.\\n\\n`getMyWalletTransactions()`: Retrieves a paginated list of wallet transactions for the authenticated store, with optional filtering by transaction type.\\n\\n`filterTransactions()`: Filters the list of wallet transactions for the authenticated store or a specified wallet, based on various criteria such as time range, transaction type, and transaction ID.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplate.java\&quot;:\&quot;This file defines a single class, `EmailTemplate`, which is used to represent an email message with a recipient, subject, and HTML content.\\n\\n`EmailTemplate`: A class that represents an email message with a recipient, subject, and HTML content.\\n\\nThe file does not contain any functions, only the definition of the `EmailTemplate` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductComboController.java\&quot;:\&quot;This file contains a Spring Boot controller class for managing product combos in an e-commerce application.\\n\\n`ProductComboController`: A controller class that provides various endpoints for creating, updating, disabling, and retrieving product combos.\\n\\n`validateActiveStoreAndGetId()`: A helper function that validates the active status of the store associated with the current user and returns the store\\u0027s ID.\\n\\n`createCombo()`: Endpoint for creating a new product combo.\\n\\n`updateCombo()`: Endpoint for updating an existing product combo.\\n\\n`disableCombo()`: Endpoint for disabling an existing product combo.\\n\\n`getComboById()`: Endpoint for retrieving the details of a specific product combo.\\n\\n`getAllCombos()`: Endpoint for retrieving a list of all product combos, with optional filtering and sorting.\\n\\n`getMyCombos()`: Endpoint for retrieving the product combos associated with the currently logged-in store.\\n\\n`getProductsInCombo()`: Endpoint for retrieving the list of products included in a specific product combo.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/UploadController.java\&quot;:\&quot;This file contains a Spring Boot REST controller class for handling image uploads to Cloudinary.\\n\\n`UploadController`: A REST controller class that provides endpoints for uploading single and multiple images to Cloudinary.\\n\\n`uploadImage`: A POST endpoint that accepts a single image file and uploads it to Cloudinary, returning the URL of the uploaded image.\\n\\n`uploadImages`: A POST endpoint that accepts multiple image files and uploads them to Cloudinary, returning a list of URLs for the uploaded images.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ProductResponse.java\&quot;:\&quot;This file contains a single class `ProductResponse` which is a data transfer object (DTO) used to represent the response of a product in an e-commerce application. The class has various fields that capture the different aspects of a product, such as its identification information, basic information, images and videos, pricing and discounts, status and ratings, and various product-specific attributes for different types of audio products (speakers, headphones, microphones, amplifiers, turntables, and DACs/mixers/sound cards).\\n\\n`ProductResponse`: A DTO class that represents the response of a product in an e-commerce application, containing various fields to capture the different aspects of the product.\\n\\n`BulkDiscountResponse`: A nested class within `ProductResponse` that represents the bulk discount information for a product.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/BaseEntity.java\&quot;:\&quot;This file defines a base entity class for an audio e-commerce application. It includes the following:\\n\\n`BaseEntity`: A base class that provides common properties and behaviors for all entities in the application, such as a unique identifier, creation and modification timestamps, and a flag to indicate if the entity is active.\\n\\n`id`: Generates a unique UUID identifier for the entity.\\n`isActive`: Indicates whether the entity is active or not.\\n`createdAt`: Records the timestamp when the entity was created.\\n`updatedAt`: Records the timestamp when the entity was last modified.\\n`deleteAt`: Records the timestamp when the entity was deleted.\\n\\nThe file also includes annotations and configurations for the entity, such as the use of the `@MappedSuperclass` annotation to make this class a base class for other entities, and the use of the `@EntityListeners` annotation to enable auditing functionality.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/exception/ExternalApiException.java\&quot;:\&quot;This file defines a custom exception class called `ExternalApiException` that extends the `RuntimeException` class. It is used to handle exceptions that occur when interacting with external APIs.\\n\\n`ExternalApiException`: A custom exception class that represents an error that occurred while interacting with an external API.\\n\\n`ExternalApiException(String message)`: A constructor that creates a new `ExternalApiException` instance with the provided error message.\\n\\n`ExternalApiException(String message, Throwable cause)`: A constructor that creates a new `ExternalApiException` instance with the provided error message and the underlying cause of the exception.\&quot;,\&quot;/src/main/resources/templates/email/kyc_rejected.html\&quot;:\&quot;This file appears to be an HTML template for a KYC (Know Your Customer) rejection notification email. It does not contain any classes or functions, but rather a structured HTML document with placeholders for dynamic content.\\n\\nThe file performs the following tasks:\\n\\n1. Displays a greeting to the store owner with their name.\\n2. Informs the store owner that their KYC application has been rejected.\\n3. Provides the reason for the rejection.\\n4. Includes a link to the KYC page for the store owner to update and resubmit their application.\\n5. Closes the email with a signature from the AudioEcommerce team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateType.java\&quot;:\&quot;This file defines an `enum` called `EmailTemplateType` which represents different types of email templates used in an audio e-commerce application. The `enum` includes the following values:\\n\\n`EmailTemplateType`: An enum that defines the different types of email templates used in the application, such as account welcome, account creation, KYC submission, KYC approval, KYC rejection, order confirmation, and password reset.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartItemRepository.java\&quot;:\&quot;This file contains a single interface:\\n\\n`CartItemRepository`: This interface extends the `JpaRepository` interface and is responsible for providing CRUD (Create, Read, Update, Delete) operations for the `CartItem` entity, which is identified by a `UUID` primary key.\\n\\nThe file does not contain any classes or functions. It defines a repository interface that allows for the management of `CartItem` entities in a database using the Spring Data JPA framework.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CustomerStatus.java\&quot;:\&quot;This file contains an enumeration (enum) named `CustomerStatus`, which defines the possible status values for a customer in an audio e-commerce application.\\n\\n`CustomerStatus`: An enumeration that represents the different status values a customer can have, such as active, inactive, suspended, or deleted.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformWallet.java\&quot;:\&quot;This file defines a `PlatformWallet` entity class, which represents a wallet associated with a platform, shop, or customer in an e-commerce application. The class has several properties that track the wallet\\u0027s balance, transactions, and ownership details.\\n\\n`PlatformWallet`: An entity class that represents a wallet associated with a platform, shop, or customer in an e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletTransactionRepository.java\&quot;:\&quot;This file is a Spring Data JPA repository interface for managing `StoreWalletTransaction` entities in an e-commerce application.\\n\\n`StoreWalletTransactionRepository`: This interface extends the `JpaRepository` interface and provides methods for querying and filtering `StoreWalletTransaction` entities.\\n\\n`findByWallet`: Retrieves a list of all `StoreWalletTransaction` entities associated with a given `StoreWallet`.\\n\\n`findByWallet_WalletId`: Retrieves a paginated list of `StoreWalletTransaction` entities associated with a given wallet ID.\\n\\n`findTop1ByWallet_WalletIdOrderByCreatedAtDesc`: Retrieves the most recent `StoreWalletTransaction` associated with a given wallet ID.\\n\\n`findByWallet_WalletIdOrderByCreatedAtDesc`: Retrieves a paginated list of `StoreWalletTransaction` entities associated with a given wallet ID, ordered by creation date in descending order.\\n\\n`findByWallet_WalletIdAndTypeOrderByCreatedAtDesc`: Retrieves a paginated list of `StoreWalletTransaction` entities associated with a given wallet ID and transaction type, ordered by creation date in descending order.\\n\\n`filterTransactions`: Retrieves a paginated list of `StoreWalletTransaction` entities based on various filter criteria, such as wallet ID, creation date range, transaction type, and transaction ID.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreController.java\&quot;:\&quot;This file contains a Spring Boot controller class for managing store-related operations in an e-commerce application.\\n\\n`StoreController`: A REST controller class that provides endpoints for managing stores, including retrieving store details, updating store information, and changing store status.\\n\\n`getStoreById`: Retrieves the details of a store by its unique identifier (UUID).\\n\\n`getStoreByAccount`: Retrieves the store associated with a specific account (identified by its UUID).\\n\\n`updateStore`: Updates the details of a store, such as the store name, description, logo, cover image, address, phone number, and email.\\n\\n`updateStoreStatus`: Updates the status of a store (e.g., active, inactive, pending, rejected).\\n\\n`getAllStores`: Retrieves a paginated list of all stores, with the ability to search by a keyword.\\n\\n`getMyStoreId`: Retrieves the UUID of the store associated with the currently authenticated user.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionStatus.java\&quot;:\&quot;This file defines an enumeration called `WalletTransactionStatus` that represents the possible statuses of a wallet transaction, such as `PENDING`, `SUCCESS`, `FAILED`, and `CANCELED`.\\n\\nThere are no classes or functions in this file. The file simply defines an enumeration to represent the different states of a wallet transaction.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartRepository.java\&quot;:\&quot;This file contains a single interface `CartRepository` that extends the `JpaRepository` interface provided by Spring Data JPA.\\n\\n`CartRepository`: An interface that provides methods for interacting with the `Cart` entity in the database, including finding a `Cart` by a `Customer` and a `CartStatus`.\\n\\n`findByCustomerAndStatus`: A method that retrieves an `Optional` of a `Cart` entity based on the provided `Customer` and `CartStatus`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/TestController.java\&quot;:\&quot;This file contains a Spring Boot REST controller class with three API endpoints.\\n\\n`TestController`: A REST controller class that provides three API endpoints for testing authentication and authorization.\\n\\n`publicApi()`: A public API endpoint that can be accessed without authentication.\\n\\n`privateApi(Authentication authentication)`: A private API endpoint that requires a valid authentication token to access.\\n\\n`testRole(@AuthenticationPrincipal org.springframework.security.core.userdetails.User user)`: An API endpoint that tests the user\\u0027s roles and displays the username and authorities.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductServiceImpl.java\&quot;:\&quot;This file contains a single class `ProductServiceImpl` that implements the `ProductService` interface. The class provides various methods for managing products in an e-commerce application.\\n\\n`ProductServiceImpl`: Implements the `ProductService` interface and provides methods for creating, updating, disabling, and retrieving products.\\n\\n`generateUniqueSlug`: Generates a unique slug for a product based on its name.\\n`createProduct`: Creates a new product in the system.\\n`updateProduct`: Updates an existing product.\\n`disableProduct`: Enables or disables a product.\\n`getAllProducts`: Retrieves a list of products based on various filters.\\n`getProductById`: Retrieves a single product by its ID.\\n`toResponse`: Converts a `Product` entity to a `ProductResponse` DTO.\\n`applyRequestToProduct`: Applies the data from a `ProductRequest` DTO to a `Product` entity.\\n`calculatePrice`: Calculates the final price of a product based on its price, discount, and promotion.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreKyc.java\&quot;:\&quot;This file defines the `StoreKyc` entity, which represents the KYC (Know Your Customer) information for a store in an audio e-commerce application. The entity contains various fields related to the store\\u0027s information, such as the store name, phone number, business license number, bank account details, and KYC status. The file also includes annotations for Jackson JSON serialization and Lombok for generating boilerplate code.\\n\\nThere are no explicit functions defined in this file. The file serves as a data model for the `StoreKyc` entity, which can be used in the application\\u0027s persistence layer.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductComboServiceImpl.java\&quot;:\&quot;This file contains a single class `ProductComboServiceImpl` that implements the `ProductComboService` interface. The class provides various methods for managing product combos, including creating, retrieving, updating, and disabling combos.\\n\\n`ProductComboServiceImpl`: Implements the `ProductComboService` interface to handle CRUD operations for product combos.\\n\\n`createCombo`: Creates a new product combo by validating the input data, calculating the total price, and saving the combo to the database.\\n`getComboById`: Retrieves a product combo by its ID.\\n`getAllCombos`: Retrieves a paginated list of all product combos, with optional filtering and sorting.\\n`getCombosByStoreId`: Retrieves a paginated list of product combos for a specific store, with optional filtering and sorting.\\n`updateCombo`: Updates an existing product combo with the provided data.\\n`disableCombo`: Disables an existing product combo.\\n`getProductsInCombo`: Retrieves the list of products included in a specific product combo.\\n`buildResponse`: Builds a `ComboResponse` DTO from a `ProductCombo` entity and a `Category` entity.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Category.java\&quot;:\&quot;This file defines a `Category` entity class for an audio e-commerce application. The class represents a category of products, such as speakers, microphones, DACs, mixers, and amplifiers. The class has several properties, including a unique identifier, a name, a slug for SEO, a description, an icon URL, and a sort order.\\n\\nThe file does not contain any functions, only the definition of the `Category` entity class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ToggleItemRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`ToggleItemRequest`: A data transfer object (DTO) that represents a request to toggle the selection state of an item.\\n\\nThis file does not contain any functions. It simply defines a DTO class with a single boolean property `selected` to represent the selection state of an item.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartItemType.java\&quot;:\&quot;This file defines an enumeration called `CartItemType` which represents the different types of items that can be added to a shopping cart in an e-commerce application. The enumeration has two values: `PRODUCT` and `COMBO`.\\n\\nThis file does not contain any classes or functions, but rather defines an enumeration that can be used throughout the application to represent the different types of items that can be added to a shopping cart.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWalletTransaction.java\&quot;:\&quot;This file defines a JPA entity class `StoreWalletTransaction` that represents a transaction related to a store\\u0027s wallet. The class has several fields, including the transaction ID, the wallet it is associated with, the type of transaction, the amount, the balance after the transaction, a description, and the order ID (if applicable). The class also includes various annotations for mapping the entity to a database table and handling JSON serialization.\\n\\nThere are no explicit functions defined in this file. The file serves to define the structure and properties of the `StoreWalletTransaction` entity, which can be used in the application\\u0027s data model and persistence layer.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/WalletController.java\&quot;:\&quot;This file contains a single class, `WalletController`, which is a Spring Boot REST controller that provides APIs for managing a customer\\u0027s electronic wallet, including listing transaction history, depositing, withdrawing, making payments, and processing refunds.\\n\\n`WalletController`: A Spring Boot REST controller that provides APIs for managing a customer\\u0027s electronic wallet.\\n\\n`list`: Retrieves the transaction history for a customer\\u0027s wallet, with support for pagination.\\n\\n`deposit`: Allows a customer to deposit funds into their wallet.\\n\\n`withdraw`: Allows a customer to withdraw funds from their wallet.\\n\\n`payment`: Allows a customer to make a payment from their wallet, with support for idempotency.\\n\\n`refund`: Allows a customer to receive a refund to their wallet.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/AddressLabel.java\&quot;:\&quot;This file contains an enumeration (enum) called `AddressLabel`, which defines a set of possible address labels. The enum has three values: `HOME`, `WORK`, and `OTHER`.\\n\\nThis file does not contain any classes or functions. It simply defines an enumeration that can be used to represent different types of addresses in an e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CategoryRequest.java\&quot;:\&quot;This file contains a single class, `CategoryRequest`, which is a data transfer object (DTO) used to represent a request for a category in an audio e-commerce application.\\n\\n`CategoryRequest`: A DTO class that represents a request for a category, containing fields for the category\\u0027s name, slug, description, icon URL, and sort order.\\n\\nThis file does not contain any functions, only the `CategoryRequest` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`UpdateStoreRequest`: A data transfer object (DTO) that represents the request payload for updating a store\\u0027s information, including the store name, description, logo URL, cover image URL, address, phone number, and email.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate the data required to update a store\\u0027s information in an e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ComboResponse.java\&quot;:\&quot;This file contains a single class, `ComboResponse`, which is a data transfer object (DTO) used to represent a combo product in an e-commerce application.\\n\\n`ComboResponse`: A DTO class that represents a combo product, containing information such as the combo ID, store details, category, product details, media, shipping details, pricing, and status.\\n\\nThis file does not contain any functions, as it is a simple DTO class used to transfer data between the application layers.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartStatus.java\&quot;:\&quot;This file defines an enumeration called `CartStatus` that represents the different states a shopping cart can have in an e-commerce application.\\n\\n`CartStatus`: An enumeration that represents the different states a shopping cart can have, such as `ACTIVE`, `LOCKED`, and `CHECKED_OUT`.\&quot;,\&quot;/src/main/resources/templates/email/account_created.html\&quot;:\&quot;This file is an HTML document that serves as a welcome email template for users who have registered an account on the AudioEcommerce platform. It does not contain any classes or functions, but rather presents a simple, formatted message with a greeting, a link to the platform\\u0027s homepage, and a closing message from the AudioEcommerce team.\\n\\nThe file performs the following tasks:\\n1. Defines the HTML structure with the necessary metadata (charset, title).\\n2. Provides a welcoming message to the user, addressing them by their name.\\n3. Encourages the user to explore the products available on the AudioEcommerce platform by providing a link to the homepage.\\n4. Includes a closing message from the AudioEcommerce team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformTransactionResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`PlatformTransactionResponse`: A data transfer object (DTO) that represents a platform transaction, including information such as the transaction ID, wallet ID, order ID, store ID, customer ID, amount, transaction type, transaction status, description, and creation timestamp.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate and transfer data related to platform transactions.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/CategoryService.java\&quot;:\&quot;This file defines an interface called `CategoryService` that provides methods for managing categories in an audio e-commerce application.\\n\\n`CategoryService`: An interface that defines the methods for managing categories in the audio e-commerce application.\\n\\n`getAllCategories(String keyword)`: Retrieves all categories, optionally filtering by a keyword.\\n`getCategoryById(UUID categoryId)`: Retrieves a category by its unique identifier.\\n`createCategory(CategoryRequest request)`: Creates a new category based on the provided request.\\n`updateCategory(UUID categoryId, CategoryRequest request)`: Updates an existing category with the provided request.\\n`deleteCategory(UUID categoryId)`: Deletes a category by its unique identifier.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddCartItemsRequest.java\&quot;:\&quot;This file defines a data transfer object (DTO) for adding items to a shopping cart in an e-commerce application.\\n\\n`AddCartItemsRequest`: A class that represents a request to add items to a shopping cart, containing a list of `CartItemLine` objects.\\n\\n`CartItemLine`: A nested class that represents a single item to be added to the shopping cart, with a type, an ID, and a quantity.\\n\\nThe file does not contain any functions, but rather defines the structure of the request object and its nested item line object, which can be used to validate and process cart item additions in the application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/BaseResponse.java\&quot;:\&quot;This file defines a `BaseResponse` class, which is a generic data transfer object (DTO) used to represent a response from an API. The class has three properties: `status`, `message`, and `data`, which can be used to convey the status, message, and data of the response, respectively.\\n\\n`BaseResponse\\u003cT\\u003e`: A generic data transfer object (DTO) used to represent a response from an API, with properties for status, message, and data.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/LoginResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`LoginResponse`: A data transfer object (DTO) that represents the response from a login operation, containing an access token, token type, and an `AccountResponse` object representing the authenticated user.\\n\\nThe file does not contain any functions, only a constructor that initializes the fields of the `LoginResponse` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletRepository.java\&quot;:\&quot;This file contains a single interface named `WalletRepository` that extends the `JpaRepository` interface. The `WalletRepository` interface provides methods for interacting with the `Wallet` entity in the database.\\n\\n`WalletRepository`: An interface that provides methods for interacting with the `Wallet` entity in the database.\\n\\n`existsByCustomer_Id(UUID customerId)`: Checks if a wallet exists for the given customer ID.\\n\\n`findByCustomer_Id(UUID customerId)`: Retrieves the wallet for the given customer ID.\\n\\n`findByCustomerIdForUpdate(UUID customerId)`: Retrieves the wallet for the given customer ID with a pessimistic write lock, which is used for safely updating the wallet balance.\&quot;,\&quot;/src/main/resources/templates/email/welcome_store.html\&quot;:\&quot;This file appears to be an HTML template for a welcome email sent to a new store owner on the AudioEcommerce platform. It does not contain any classes or functions, but rather displays a greeting, instructions, and a link to the store management page.\\n\\nThe file performs the following tasks:\\n\\n1. Displays a greeting to the new store owner, using a dynamic variable `${name}` to insert the owner\\u0027s name.\\n2. Provides a brief introduction to the store owner\\u0027s role on the AudioEcommerce platform.\\n3. Includes a link to the store management page, using the dynamic variable `${siteUrl}` to construct the URL.\\n4. Concludes with a closing message from the AudioEcommerce team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/WalletService.java\&quot;:\&quot;This file defines an interface called `WalletService` that provides methods for managing a customer\\u0027s wallet, including getting the wallet balance, depositing, withdrawing, making payments, and processing refunds, as well as listing the customer\\u0027s wallet transactions.\\n\\n`WalletService`: An interface that defines methods for managing a customer\\u0027s wallet.\\n\\n`getByCustomer(UUID customerId)`: Retrieves the wallet information for the specified customer.\\n\\n`deposit(UUID customerId, WalletTxnRequest req)`: Deposits funds into the customer\\u0027s wallet.\\n\\n`withdraw(UUID customerId, WalletTxnRequest req)`: Withdraws funds from the customer\\u0027s wallet.\\n\\n`payment(UUID customerId, WalletTxnRequest req)`: Processes a payment from the customer\\u0027s wallet.\\n\\n`refund(UUID customerId, WalletTxnRequest req)`: Processes a refund to the customer\\u0027s wallet.\\n\\n`listTransactions(UUID customerId, Pageable pageable)`: Retrieves a paginated list of the customer\\u0027s wallet transactions.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/CustomerController.java\&quot;:\&quot;This file is a Spring Boot REST controller for managing customer-related operations in an e-commerce application.\\n\\n`CustomerController`: A REST controller that handles CRUD operations for customers, as well as address-related operations.\\n\\n`get`: Retrieves a customer by their unique identifier.\\n`search`: Searches for customers based on various criteria, such as keyword, status, and sorting.\\n`update`: Updates an existing customer.\\n`softDelete`: Soft-deletes a customer.\\n`listAddresses`: Retrieves the list of addresses associated with a customer.\\n`addAddress`: Adds a new address for a customer.\\n`updateAddress`: Updates an existing address for a customer.\\n`deleteAddress`: Deletes an address for a customer.\\n`setDefault`: Sets a customer\\u0027s default address.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductService.java\&quot;:\&quot;This file does not contain any classes, but rather defines an interface called `ProductService` that provides the following functions:\\n\\n`createProduct`: Creates a new product based on the provided `ProductRequest`.\\n`getAllProducts`: Retrieves a list of products based on the provided filters (category ID, store ID, keyword, page, size, and status).\\n`getProductById`: Retrieves a product by its ID.\\n`updateProduct`: Updates an existing product based on the provided `ProductRequest`.\\n`disableProduct`: Disables an existing product by its ID.\\n\\nThe purpose of this interface is to define the contract for a service that manages the creation, retrieval, update, and disabling of products in an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CartResponse.java\&quot;:\&quot;This file defines a data transfer object (DTO) for a cart response in an audio e-commerce application.\\n\\n`CartResponse`: A class that represents the response data for a cart, including the cart ID, customer ID, status, subtotal, discount total, grand total, and a list of items in the cart.\\n\\n`Item`: A nested class within `CartResponse` that represents an individual item in the cart, including the cart item ID, type (product or combo), reference ID, name, image, quantity, unit price, and line total.\\n\\nThis file does not contain any functions, but rather defines the structure and properties of the `CartResponse` and `Item` classes, which can be used to transfer cart-related data between different components of the application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerRepository.java\&quot;:\&quot;This file contains a Java interface named `CustomerRepository` that extends the `JpaRepository` interface. The `CustomerRepository` interface provides methods for interacting with a `Customer` entity in a database.\\n\\n`CustomerRepository`: An interface that provides methods for managing `Customer` entities in a database.\\n\\n`existsByAccount_Id(UUID accountId)`: Checks if a `Customer` entity exists with the given `accountId`.\\n\\n`findByAccount_Id(UUID accountId)`: Retrieves an `Optional` of a `Customer` entity with the given `accountId`.\\n\\n`findByEmailIgnoreCase(String email)`: Retrieves an `Optional` of a `Customer` entity with the given email (case-insensitive).\\n\\n`existsByEmailIgnoreCase(String email)`: Checks if a `Customer` entity exists with the given email (case-insensitive).\\n\\n`existsByPhoneNumber(String phoneNumber)`: Checks if a `Customer` entity exists with the given phone number.\\n\\n`existsByEmailIgnoreCaseAndIdNot(String email, UUID id)`: Checks if a `Customer` entity exists with the given email (case-insensitive) and a different `id`.\\n\\n`existsByPhoneNumberAndIdNot(String phoneNumber, UUID id)`: Checks if a `Customer` entity exists with the given phone number and a different `id`.\\n\\n`search(String keyword, CustomerStatus status, Pageable pageable)`: Retrieves a `Page` of `Customer` entities based on the given `keyword` and `status`, with pagination.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/LoginRequest.java\&quot;:\&quot;This file contains a single class, `LoginRequest`, which is a data transfer object (DTO) used for handling login requests.\\n\\n`LoginRequest`: A DTO class that represents a login request, containing an email and a password.\\n\\nThe file does not contain any functions. It is a simple DTO class that uses Lombok\\u0027s `@Data` annotation to generate getters, setters, and other boilerplate code. The class also includes validation constraints using the Jakarta Validation API, ensuring that the email is valid and the password is not blank.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/CategoryController.java\&quot;:\&quot;This file is a Spring Boot controller class that handles CRUD operations for product categories in an e-commerce application.\\n\\n`CategoryController`: A REST controller class that provides API endpoints for managing product categories.\\n\\n`getAllCategories`: Retrieves all product categories, with an optional search by keyword.\\n`getCategoryById`: Retrieves a specific product category by its ID.\\n`createCategory`: Creates a new product category.\\n`updateCategory`: Updates an existing product category.\\n`deleteCategory`: Deletes a product category.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateProductRequest.java\&quot;:\&quot;This file contains a single class, `CreateProductRequest`, which is a data transfer object (DTO) used to represent the request data for creating a new product in an e-commerce application for audio products.\\n\\n`CreateProductRequest`: A DTO class that holds the necessary information for creating a new product, including details about the store, category, brand, product specifications, pricing, and inventory.\\n\\nThe file does not contain any functions, but it defines a set of properties and annotations that are used to manage the data structure and validation of the `CreateProductRequest` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionStatus.java\&quot;:\&quot;This file defines an enumeration called `TransactionStatus` that represents the different statuses a transaction can have in an audio e-commerce application.\\n\\n`TransactionStatus`: An enumeration that represents the possible statuses of a transaction, including `PENDING`, `DONE`, and `FAILED`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreRepository.java\&quot;:\&quot;This file contains a repository interface named `StoreRepository` that extends the `JpaRepository` interface. The `StoreRepository` interface provides methods for interacting with the `Store` entity in the database. Here\\u0027s a summary of the classes and functions in the file:\\n\\n`StoreRepository`: An interface that provides methods for performing CRUD operations on the `Store` entity, as well as additional custom queries.\\n\\n`findByAccount_Id(UUID accountId)`: Finds a `Store` entity by the `id` field of the associated `Account` entity.\\n\\n`existsByAccount_Id(UUID accountId)`: Checks if a `Store` entity exists with the given `accountId`.\\n\\n`findByAccount_Email(String email)`: Finds a `Store` entity by the `email` field of the associated `Account` entity.\\n\\n`findAllByStatus(StoreStatus status)`: Retrieves a list of `Store` entities with the given `StoreStatus`.\\n\\n`existsByStoreName(String storeName)`: Checks if a `Store` entity exists with the given `storeName`.\\n\\n`findByStoreId(UUID storeId)`: Finds a `Store` entity by its `storeId`.\\n\\n`findByStoreNameContainingIgnoreCase(String keyword, Pageable pageable)`: Retrieves a paginated list of `Store` entities where the `storeName` contains the given `keyword` (case-insensitive).\\n\\n`findByStoreIdAndStatus(UUID storeId, StoreStatus status)`: Finds a `Store` entity by its `storeId` and `StoreStatus`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductComboService.java\&quot;:\&quot;This file defines an interface called `ProductComboService` that provides methods for managing product combos in an e-commerce application.\\n\\n`ProductComboService`: Defines the interface for managing product combos in an e-commerce application.\\n\\n`createCombo`: Creates a new product combo.\\n`getComboById`: Retrieves a product combo by its ID.\\n`getAllCombos`: Retrieves a list of all product combos, with optional filtering and sorting.\\n`getCombosByStoreId`: Retrieves a list of product combos for a specific store, with optional filtering and sorting.\\n`updateCombo`: Updates an existing product combo.\\n`disableCombo`: Disables an existing product combo.\\n`getProductsInCombo`: Retrieves the list of products in a specific product combo.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/exception/ApiError.java\&quot;:\&quot;This file defines a single class, `ApiError`, which is used to represent an error response from an API.\\n\\n`ApiError`: A class that represents an error response from an API, containing information such as the HTTP status, error message, timestamp, and a list of error details.\\n\\nThe file does not contain any functions, but rather defines the structure of the `ApiError` class and its properties.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/CategoryRepository.java\&quot;:\&quot;This file contains a single interface `CategoryRepository` that extends the `JpaRepository` interface provided by Spring Data JPA.\\n\\n`CategoryRepository`: An interface that provides CRUD operations and custom query methods for the `Category` entity.\\n\\n`findByName(String name)`: Finds a `Category` entity by its name.\\n`findBySlug(String slug)`: Finds a `Category` entity by its slug.\\n`existsByName(String name)`: Checks if a `Category` entity with the given name already exists.\\n`findAllByOrderBySortOrderAsc()`: Retrieves all `Category` entities sorted by their `sortOrder` in ascending order.\\n`findByNameContainingIgnoreCase(String keyword)`: Finds `Category` entities where the name contains the given keyword (case-insensitive).\\n`findByNameIgnoreCase(String name)`: Finds a `Category` entity by its name (case-insensitive).\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressUpdateRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`AddressUpdateRequest`: A data transfer object (DTO) that represents a request to update an address, including fields such as receiver name, phone number, address details, and whether the address is the default.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate the data required to update an address in an e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomUserDetailsService.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`CustomUserDetailsService`: This class implements the `UserDetailsService` interface and provides a custom implementation for loading user details based on the username and role.\\n\\n`loadUserByUsername`: This function is responsible for loading the user details by the provided username, which is expected to be in the format \\\&quot;email:ROLE\\\&quot;. It retrieves the user account from the repository, creates the necessary authorities, and returns a `UserDetails` object.\\n\\nThe purpose of this file is to provide a custom implementation of the `UserDetailsService` interface, which is used by the Spring Security framework to load user details for authentication and authorization purposes.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/UploadService.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`UploadService`: A service class responsible for uploading images to Cloudinary, a cloud-based image and video management platform.\\n\\n`uploadImage`: A function that takes a `MultipartFile` object, uploads it to Cloudinary, and returns the secure URL of the uploaded image.\\n\\nThe purpose of this file is to provide a service for uploading images to Cloudinary, which can be used in an e-commerce application for audio-related products.\&quot;,\&quot;/HELP.md\&quot;:\&quot;This file does not contain any classes or functions. It is a documentation file that provides information about the project\\u0027s setup and configuration. The key points are:\\n\\n1. It provides references to the official Apache Maven documentation and the Spring Boot Maven Plugin Reference Guide.\\n2. It explains that the project POM (Project Object Model) contains empty overrides for elements like `\\u003clicense\\u003e` and `\\u003cdevelopers\\u003e` to prevent inheritance from the parent POM. If a different parent is used, these overrides may need to be removed.\\n3. The file serves as a guide for developers to understand the project\\u0027s setup and configuration, particularly related to Maven and Spring Boot.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationFailureHandler.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`OAuth2AuthenticationFailureHandler`: This class is responsible for handling authentication failures in an OAuth2-based authentication system.\\n\\n`onAuthenticationFailure`: This function is called when an authentication failure occurs during the OAuth2 authentication process. It constructs a redirect URL with the error message and sends a 302 (redirect) response to the client.\\n\\nThe purpose of this file is to provide a custom implementation of the `AuthenticationFailureHandler` interface from the Spring Security framework, which is used to handle authentication failures in an OAuth2-based authentication system.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/config/SecurityConfig.java\&quot;:\&quot;This file is a Spring Security configuration class that sets up the security settings for an e-commerce application.\\n\\n`SecurityConfig`: This class configures the security settings for the application, including CSRF protection, CORS configuration, session management, and authorization rules.\\n\\n`passwordEncoder()`: This function returns a BCryptPasswordEncoder instance, which is used for password hashing.\\n\\n`securityFilterChain()`: This function configures the security filter chain, including setting up OAuth2 login, JWT authentication, and exception handling.\\n\\n`restAuthEntryPoint()`: This function defines the authentication entry point for the application, which is used to handle unauthorized requests.\\n\\n`authenticationManager()`: This function returns an AuthenticationManager instance, which is used for authentication.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletTransactionResponse.java\&quot;:\&quot;This file contains a single class, `StoreWalletTransactionResponse`, which is a data transfer object (DTO) used to represent the response of a store wallet transaction.\\n\\n`StoreWalletTransactionResponse`: A DTO that represents the response of a store wallet transaction, containing information such as the transaction ID, wallet ID, order ID, amount, balance after the transaction, description, creation timestamp, transaction type, and a friendly display type.\\n\\nThe file does not contain any functions, as it is a simple data class with properties and getters/setters.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionType.java\&quot;:\&quot;This file defines an enumeration called `TransactionType` that represents different types of transactions that can occur in an audio e-commerce system. The enumeration includes the following values:\\n\\n`TransactionType`: Defines the different types of transactions that can occur in an audio e-commerce system.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/WalletTransaction.java\&quot;:\&quot;This file defines a JPA entity class `WalletTransaction` that represents a transaction in a wallet system. The class has several fields, including the wallet, transaction amount, transaction type, transaction status, description, balance before and after the transaction, and an optional order ID. The class is annotated with Lombok annotations for generating getters, setters, and other boilerplate code.\\n\\n`WalletTransaction`: An entity class that represents a wallet transaction, with fields for the wallet, transaction amount, type, status, description, and balance before and after the transaction.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PagedResult.java\&quot;:\&quot;This file defines a data transfer object (DTO) for a paged result, which is commonly used in pagination scenarios. It contains the following:\\n\\n`PagedResult\\u003cT\\u003e`: A class that represents a paged result, containing a list of items, the total number of elements, the total number of pages, the current page, and the page size.\\n\\nThe file does not contain any functions, as it is a simple data class using Lombok annotations to generate the necessary boilerplate code (getters, setters, builder, and constructors).\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformWalletService.java\&quot;:\&quot;This file does not contain any classes, but rather an interface named `PlatformWalletService` that defines the following functions:\\n\\n`getAllWallets()`: Retrieves a list of all platform wallets.\\n\\n`getWalletByOwner(UUID ownerId)`: Retrieves a platform wallet by its owner ID (either a shop or a customer).\\n\\n`filterTransactions(UUID storeId, UUID customerId, TransactionStatus status, TransactionType type, LocalDateTime from, LocalDateTime to)`: Filters platform transactions based on the provided parameters (store ID, customer ID, transaction status, transaction type, and date range).\\n\\nThis interface is likely part of a larger application that manages an e-commerce platform\\u0027s wallet and transaction functionality.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductController.java\&quot;:\&quot;This file contains a Spring Boot controller class for managing products in an e-commerce application.\\n\\n`ProductController`: This class handles the CRUD operations for products, including fetching a list of products, retrieving product details, creating new products, updating existing products, and disabling/enabling products.\\n\\n`getAllProducts`: This function retrieves a list of products based on various filtering criteria, such as category, store, keyword, and status.\\n\\n`getProductById`: This function retrieves the details of a specific product by its ID.\\n\\n`createProduct`: This function creates a new product in the system, allowing stores to add new products to the platform.\\n\\n`updateProduct`: This function updates the details of an existing product, allowing stores to modify the product information.\\n\\n`disableProduct`: This function disables or enables a product, allowing stores to temporarily hide a product from the platform.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformWalletServiceImpl.java\&quot;:\&quot;This file contains a service implementation class and several functions related to platform wallet and transaction management.\\n\\n`PlatformWalletServiceImpl`: Implements the `PlatformWalletService` interface, providing methods to manage platform wallets and transactions.\\n\\n`mapToWalletResponse`: Maps a `PlatformWallet` entity to a `PlatformWalletResponse` DTO, optionally including transaction details.\\n\\n`mapToTransactionResponse`: Maps a `PlatformTransaction` entity to a `PlatformTransactionResponse` DTO.\\n\\n`getAllWallets`: Retrieves a list of all platform wallets and maps them to `PlatformWalletResponse` DTOs.\\n\\n`getWalletByOwner`: Retrieves the platform wallet for a given owner ID and maps it to a `PlatformWalletResponse` DTO.\\n\\n`filterTransactions`: Retrieves a list of platform transactions based on various filter criteria and maps them to `PlatformTransactionResponse` DTOs.\&quot;,\&quot;/src/main/resources/templates/email/kyc_submitted.html\&quot;:\&quot;This file appears to be an HTML template for an email that confirms the submission of a KYC (Know Your Customer) form. It does not contain any classes or functions, but rather displays information about the submitted KYC form, including the store name, owner name, contact information, and submission time. The template also includes a link to the KYC page on the website.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformWalletController.java\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`PlatformWalletController`: A REST controller class that provides APIs for managing platform wallets, including fetching a list of all wallets, getting a wallet by owner ID, and filtering transactions.\\n\\n`getAllWallets()`: Retrieves a list of all platform wallets, including wallets for the platform, shops, and customers.\\n\\n`getWalletByOwner(UUID ownerId)`: Retrieves the wallet details and associated transactions for a specific owner (shop or customer) identified by the provided `ownerId`.\\n\\n`filterTransactions(UUID storeId, UUID customerId, TransactionStatus status, TransactionType type, LocalDateTime from, LocalDateTime to)`: Filters the list of platform transactions based on the provided parameters, such as store ID, customer ID, transaction status, transaction type, and date range.\\n\\nThis file is part of a larger application that manages an audio e-commerce platform, specifically focusing on the functionality related to platform wallets and transactions.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/AccountRepository.java\&quot;:\&quot;This file contains an interface named `AccountRepository` that extends the `JpaRepository` interface provided by Spring Data JPA. The `AccountRepository` interface is responsible for managing the persistence and retrieval of `Account` entities in the application\\u0027s database.\\n\\n`AccountRepository`: An interface that provides methods for interacting with the `Account` entity in the database.\\n\\n`findByEmailAndRole`: Retrieves an `Account` entity by its email and role.\\n`existsByEmailAndRole`: Checks if an `Account` entity with the given email and role exists in the database.\\n`findByEmailIgnoreCase`: Retrieves an `Account` entity by its email, ignoring case.\\n`existsByPhone`: Checks if an `Account` entity with the given phone number exists in the database.\\n`existsByEmailIgnoreCase`: Checks if an `Account` entity with the given email (ignoring case) exists in the database.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformWalletResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`PlatformWalletResponse`: A data transfer object (DTO) that represents a platform wallet, including its owner, balance, transactions, and other relevant information.\\n\\nThis file does not contain any functions. It is a data transfer object (DTO) that is used to represent a platform wallet in the context of an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/AccountData.java\&quot;:\&quot;This file contains a single class, `AccountData`, which is a data class that holds information about a user\\u0027s account, including their email, name, role, and the URL of the site they are associated with.\\n\\n`AccountData`: A data class that holds information about a user\\u0027s account, including their email, name, role, and the URL of the site they are associated with.\\n\\nThis file does not contain any functions, only the `AccountData` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomerServiceImpl.java\&quot;:\&quot;This file contains a single class `CustomerServiceImpl` that implements the `CustomerService` interface. The class provides various methods for managing customer-related operations, such as creating, retrieving, updating, and deleting customers, as well as managing their addresses.\\n\\n`CustomerServiceImpl`: Implements the `CustomerService` interface to provide customer-related operations.\\n\\n`create`: Creates a new customer with the provided information.\\n`get`: Retrieves a customer by their ID.\\n`search`: Searches for customers based on a keyword and status.\\n`update`: Updates an existing customer with the provided information.\\n`softDelete`: Soft-deletes a customer by setting their status to `DELETED`.\\n`listAddresses`: Retrieves a list of addresses associated with a customer.\\n`addAddress`: Adds a new address for a customer.\\n`updateAddress`: Updates an existing address for a customer.\\n`deleteAddress`: Deletes an address for a customer.\\n`setDefaultAddress`: Sets a default address for a customer.\\n`ensureCustomerExists`: Ensures that a customer with the given ID exists.\\n`setDefaultInternal`: Sets the default address for a customer internally.\\n`toCustomerResponse`: Converts a `Customer` entity to a `CustomerResponse` DTO.\\n`toAddressResponse`: Converts a `CustomerAddress` entity to an `AddressResponse` DTO.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Wallet.java\&quot;:\&quot;This file defines a `Wallet` entity class for an audio e-commerce application, which represents a customer\\u0027s wallet with a balance, currency, status, and the time of the last transaction.\\n\\n`Wallet`: A class that represents a customer\\u0027s wallet, which includes the customer, balance, currency, status, and the time of the last transaction.\\n\\nThe file does not contain any functions, but it uses the Lombok library to generate the necessary getters, setters, constructors, and a builder for the `Wallet` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerCreateRequest.java\&quot;:\&quot;This file contains a single class, `CustomerCreateRequest`, which is a data transfer object (DTO) used for creating a customer in an audio e-commerce application.\\n\\n`CustomerCreateRequest`: A DTO class that represents the necessary information for creating a new customer, including their full name, username, email, phone number, password, gender, date of birth, avatar URL, two-factor authentication status, and preferred category.\\n\\nThe file does not contain any functions, but rather defines the structure and validation rules for the `CustomerCreateRequest` DTO using Lombok annotations and Jakarta validation constraints.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailService.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`EmailService`: A service class responsible for sending emails using the JavaMailSender and EmailTemplateResolver.\\n\\n`sendEmail`: A method that sends an email using the provided EmailTemplateType and data object, resolving the email template and sending the message.\\n\\nThe purpose of this file is to provide a centralized email service that can be used to send emails with dynamic content, using a template-based approach.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/CartItem.java\&quot;:\&quot;This file defines the `CartItem` entity class, which represents an item in a shopping cart. The class has several properties, including the cart it belongs to, the type of item (product or combo), the product or combo, the quantity, the unit price, the line total, and snapshot information for quick display.\\n\\n`CartItem`: Represents an item in a shopping cart, with information about the item type, quantity, price, and snapshot data.\\n\\n`getReferenceId()`: Returns the ID of the associated product or combo, depending on the item type.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/PlatformTransactionFilterRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`PlatformTransactionFilterRequest`: A data transfer object (DTO) that represents a request to filter platform transactions based on various criteria, such as store ID, transaction status, transaction type, and date range.\\n\\nThe file does not contain any functions. It is a simple DTO class that is used to encapsulate the necessary parameters for filtering platform transactions.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CategoryServiceImpl.java\&quot;:\&quot;This file contains a single class `CategoryServiceImpl` that implements the `CategoryService` interface. The class provides CRUD (Create, Read, Update, Delete) operations for managing categories in an e-commerce application.\\n\\n`CategoryServiceImpl`: Implements the `CategoryService` interface to provide CRUD operations for managing categories.\\n\\n`getAllCategories`: Retrieves a list of all categories, optionally filtered by a keyword.\\n`getCategoryById`: Retrieves a category by its unique identifier.\\n`createCategory`: Creates a new category.\\n`updateCategory`: Updates an existing category.\\n`deleteCategory`: Deletes a category by its unique identifier.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Customer.java\&quot;:\&quot;This file defines the `Customer` entity class, which represents a customer in an e-commerce application. The class has several properties and methods related to customer information, status, security, KYC (Know Your Customer), addresses, loyalty, vouchers, order counters, and account management.\\n\\n`Customer`: Represents a customer in the e-commerce application, with various attributes and methods to manage customer-related data.\\n\\n`addAddress`: Adds a new address to the customer\\u0027s list of addresses and sets the default address if necessary.\\n\\n`setDefaultAddress`: Sets the default address for the customer and updates the `isDefault` flag for all addresses.\\n\\n`removeAddress`: Removes an address from the customer\\u0027s list of addresses and updates the default address if necessary.\\n\\n`increaseOrderCounters`: Increments the order count and unpaid order count for the customer, and updates the last order date.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/StoreData.java\&quot;:\&quot;This file contains a single class:\\n\\n`StoreData`: A data class that holds information about a store, including the store owner\\u0027s email, name, and the store name.\\n\\nThis file does not contain any functions. It is a simple data class used to store and represent information about a store in the context of an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/RegisterRequest.java\&quot;:\&quot;This file contains a single class, `RegisterRequest`, which is a data transfer object (DTO) used for handling user registration requests.\\n\\n`RegisterRequest`: A DTO class that represents the data required for user registration, including name, password, email, and phone.\\n\\nThis file does not contain any functions. It is a simple DTO class that uses Lombok annotations to generate the necessary getters, setters, and other boilerplate code.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerUpdateRequest.java\&quot;:\&quot;This file contains a single class:\\n\\n`CustomerUpdateRequest`: A data transfer object (DTO) that represents a request to update a customer\\u0027s information, including their name, username, email, phone number, gender, date of birth, avatar URL, status, two-factor authentication, KYC status, preferred category, loyalty points, and loyalty level.\\n\\nThis file does not contain any functions. It is a data class that is used to transfer customer update information between the application and the server.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UploadResponse.java\&quot;:\&quot;This file contains a single class, `UploadResponse`, which is a data transfer object (DTO) used to represent the response from an upload operation.\\n\\n`UploadResponse`: A DTO class that holds the URL, resource type, and public ID of an uploaded file.\\n\\nThis file does not contain any functions. It is a simple DTO class that is used to encapsulate the response data from an upload operation, likely to be used in a web service or API.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CartServiceImpl.java\&quot;:\&quot;This file contains a service implementation class for managing the cart functionality in an e-commerce application.\\n\\n`CartServiceImpl`: Implements the `CartService` interface and provides methods for adding items to the cart, retrieving the active cart, and managing the cart\\u0027s total calculations.\\n\\n`addItems`: Adds the specified items to the customer\\u0027s active cart, handling the creation of new cart items or updating existing ones, and recalculating the cart\\u0027s totals.\\n\\n`getActiveCart`: Retrieves the customer\\u0027s active cart, creating a new one if it doesn\\u0027t exist.\\n\\n`key`: Generates a unique key for a cart item based on its type and reference ID.\\n\\n`firstImage`: Retrieves the first image from a list of images, or returns `null` if the list is empty.\\n\\n`recalcTotals`: Recalculates the cart\\u0027s subtotal, discount total, and grand total.\\n\\n`toResponse`: Converts a `Cart` entity to a `CartResponse` object, which includes the cart details and the list of cart items.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycApprovedData.java\&quot;:\&quot;This file contains a single data class `KycApprovedData` that represents data related to a user\\u0027s KYC (Know Your Customer) approval.\\n\\n`KycApprovedData`: A data class that holds information about a user\\u0027s KYC approval, including their email, owner name, store name, and site URL.\\n\\nThis file does not contain any functions. It is a simple data transfer object (DTO) used to encapsulate and transfer data related to a user\\u0027s KYC approval in an email context.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CategoryEnum.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines an enumeration called `CategoryEnum` that represents the main product categories in an audio e-commerce application. The enumeration includes categories such as `SPEAKER`, `MICROPHONE`, `AMPLIFIER`, `MIXER`, `HEADPHONE`, `DAC`, `CABLE`, `CD_PLAYER`, and `TURNTABLE`. Each category has a set of associated technical attributes that are described in the Javadoc comments.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycSubmittedData.java\&quot;:\&quot;This file contains a data transfer object (DTO) class for storing information related to a KYC (Know Your Customer) submission in an e-commerce audio application.\\n\\n`KycSubmittedData`: A data class that holds information about a KYC submission, including the customer\\u0027s email, store details, business license information, tax code, bank account details, identity card images, and the submission timestamp.\\n\\nThe file does not contain any functions, but rather defines the structure of the `KycSubmittedData` class using Lombok annotations for data, builder, and constructor generation.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateProductRequest.java\&quot;:\&quot;This file contains a single class `UpdateProductRequest` which is a data transfer object (DTO) used to update product information in an e-commerce application. The class has various properties that represent different aspects of a product, such as category, brand, basic information, pricing, bulk discounts, status, and various audio-specific attributes for different product types (speakers, headphones, microphones, amplifiers, turntables, and DACs/mixers/sound cards).\\n\\nThe file does not contain any functions, but rather serves as a data structure to facilitate the transfer of product update information between the application and the server.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/Gender.java\&quot;:\&quot;This file contains an `Enum` class, which is a special type of class in Java that represents a fixed set of constants. The file defines an `Enum` called `Gender` with three possible values: `MALE`, `FEMALE`, and `OTHER`.\\n\\nThe purpose of this file is to provide a standardized way of representing gender information in the context of an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreKycController.java\&quot;:\&quot;This file contains a Spring Boot REST controller class for managing the KYC (Know Your Customer) process for stores in an e-commerce application.\\n\\n`StoreKycController`: This class handles the CRUD operations related to the KYC process for stores, including submitting KYC requests, retrieving KYC request details, filtering KYC requests by status, and approving or rejecting KYC requests.\\n\\n`submitKyc`: Allows a store owner to submit a KYC request with the required information.\\n`getAllRequests`: Retrieves a list of all KYC requests for a specific store.\\n`getRequestDetail`: Retrieves the details of a specific KYC request.\\n`getAllKycByStatus`: Retrieves a list of KYC requests filtered by their status (PENDING, APPROVED, REJECTED).\\n`approve`: Allows an admin to approve a KYC request and activate the store.\\n`reject`: Allows an admin to reject a KYC request with a specific reason.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtFilter.java\&quot;:\&quot;This file contains a single class and three functions:\\n\\n`JwtFilter`: A Spring Security filter that validates and processes JWT tokens in the request headers.\\n\\n`doFilterInternal`: Extracts the JWT token from the request header, validates it using the `JwtTokenProvider`, and sets the authentication in the security context if the token is valid.\\n\\nThe file is responsible for implementing a JWT-based authentication mechanism for the application. It filters incoming requests, checks for a valid JWT token, and sets the appropriate authentication in the security context.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionType.java\&quot;:\&quot;This file defines an enumeration called `WalletTransactionType` that represents different types of transactions that can occur in a wallet system.\\n\\n`WalletTransactionType`: An enumeration that represents the different types of transactions that can occur in a wallet system, such as deposits, withdrawals, payments, refunds, and system fees.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/CustomerAddress.java\&quot;:\&quot;This file defines the `CustomerAddress` entity class, which represents a customer\\u0027s address information in an e-commerce application.\\n\\n`CustomerAddress`: Represents a customer\\u0027s address, including details such as the receiver\\u0027s name, phone number, address label, country, province, district, ward, street, address line, postal code, and notes.\\n\\nThe file does not contain any functions, but it uses various annotations and properties to define the structure and behavior of the `CustomerAddress` entity, such as:\\n\\n- `@Getter`, `@Setter`, `@NoArgsConstructor`, `@AllArgsConstructor`, `@Builder`: Lombok annotations to generate boilerplate code for getters, setters, constructors, and a builder pattern.\\n- `@Entity`, `@Table`: JPA annotations to define the entity and its corresponding database table.\\n- `@Index`: JPA annotation to create database indexes on specific columns.\\n- `@ManyToOne`, `@JoinColumn`: JPA annotations to define the relationship between `CustomerAddress` and `Customer` entities.\\n- `@NotBlank`: Validation constraint to ensure certain fields are not blank.\\n- `@Enumerated`: Annotation to specify the mapping between the `AddressLabel` enum and the database column.\\n- `@Column`: Annotation to define the database column properties, such as name, length, and nullability.\\n\\nThe purpose of this file is to define the `CustomerAddress` entity, which is used to store and manage customer address information in the e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ProductRequest.java\&quot;:\&quot;This file contains a single class `ProductRequest` which is a data transfer object (DTO) for handling product-related requests in an e-commerce application. The class has various fields that represent the different aspects of a product, such as its category, brand, SKU, basic information, media, pricing, inventory, and specific details for headphones and speakers.\\n\\nThe file does not contain any functions, but rather focuses on defining the structure and properties of the `ProductRequest` class, which can be used to transfer product data between the client and the server in the e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/KycStatus.java\&quot;:\&quot;This file defines an enumeration called `KycStatus` which represents the different statuses of a Know Your Customer (KYC) process. The enumeration has four possible values: `NONE`, `PENDING`, `APPROVED`, and `REJECTED`.\\n\\nThis file does not contain any classes or functions. It simply defines an enumeration that can be used to represent the different stages of a KYC process in an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletSummaryResponse.java\&quot;:\&quot;This file contains a single class, `StoreWalletSummaryResponse`, which is a data transfer object (DTO) used to represent the summary information of a store\\u0027s wallet.\\n\\n`StoreWalletSummaryResponse`: A DTO class that holds the summary information of a store\\u0027s wallet, including the store ID, store name, wallet ID, deposit balance, available balance, pending balance, total revenue, and creation/update timestamps.\\n\\nThis file does not contain any functions, as it is a simple DTO class used to encapsulate and transfer data between different layers of the application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationSuccessHandler.java\&quot;:\&quot;This file is an implementation of the `OAuth2AuthenticationSuccessHandler` class, which is responsible for handling the successful authentication of a user through an OAuth2 flow.\\n\\n`OAuth2AuthenticationSuccessHandler`: This class is responsible for handling the successful authentication of a user through an OAuth2 flow.\\n\\n`onAuthenticationSuccess`: This function is called when a user is successfully authenticated through an OAuth2 flow. It performs the following tasks:\\n1. Retrieves the user\\u0027s email and name from the OAuth2 user attributes.\\n2. Finds or creates an `Account` entity for the user, setting the default role to `CUSTOMER`.\\n3. Ensures that a `Customer` entity and a `Wallet` entity are created for the user.\\n4. Generates a JWT token containing the user\\u0027s account ID, customer ID, email, and role.\\n5. Redirects the user to a success URL with the generated JWT token, account ID, and customer ID.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreWalletService.java\&quot;:\&quot;This file appears to be an interface for a `StoreWalletService` that provides functionality related to managing a store\\u0027s wallet and wallet transactions.\\n\\n`StoreWalletService`: An interface that defines methods for managing a store\\u0027s wallet and wallet transactions.\\n\\n`getMyWallet()`: Retrieves the current user\\u0027s wallet information.\\n\\n`getMyWalletTransactions(int page, int size, String type)`: Retrieves the current user\\u0027s wallet transactions with pagination and filtering by transaction type.\\n\\n`filterTransactions(UUID walletId, LocalDateTime from, LocalDateTime to, StoreWalletTransactionType type, UUID transactionId, Pageable pageable)`: Filters the store\\u0027s wallet transactions based on various criteria and returns a paginated result.\\n\\n`resolveWalletIdForCurrentUser()`: Resolves the wallet ID for the current user.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformWalletRepository.java\&quot;:\&quot;This file contains a repository interface for the `PlatformWallet` entity in the `audio_ecommerce` application.\\n\\n`PlatformWalletRepository`: This interface extends the `JpaRepository` interface and provides methods for interacting with the `PlatformWallet` entity in the database.\\n\\n`findByOwnerType`: This method retrieves a list of `PlatformWallet` entities based on the provided `WalletOwnerType`.\\n\\n`findByOwnerTypeAndOwnerId`: This method retrieves an optional `PlatformWallet` entity based on the provided `WalletOwnerType` and `ownerId`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Product.java\&quot;:\&quot;This file defines the `Product` entity, which represents an audio product (such as speakers, headphones, microphones, amplifiers, etc.) in an e-commerce application. The entity is designed to be flexible, supporting various attributes specific to each type of audio device.\\n\\n`Product`: Represents an audio product with detailed information, including general information, product variants, images and videos, pricing and inventory, bulk discounts, status and ratings, and various audio-specific attributes.\\n\\n`ProductVariant`: Represents a variant of a product, such as different color or version.\\n\\n`BulkDiscount`: Represents a bulk discount tier for a product, with a range of quantities and a corresponding unit price.\\n\\nThe file does not contain any functions, as it is focused on defining the structure and properties of the `Product` entity using JPA annotations and Lombok annotations.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreWalletServiceImpl.java\&quot;:\&quot;This file is a Java class named `StoreWalletServiceImpl` that implements the `StoreWalletService` interface. It provides the following functionality:\\n\\n`StoreWalletServiceImpl`: This class is responsible for managing the store wallet, including retrieving the wallet information, getting the list of wallet transactions, and filtering transactions based on various criteria.\\n\\n`getMyWallet()`: This function retrieves the summary information of the store\\u0027s wallet, including the available balance, pending balance, deposit balance, and total revenue.\\n\\n`getMyWalletTransactions(int page, int size, String type)`: This function retrieves the list of wallet transactions for the current store, with pagination and optional filtering by transaction type.\\n\\n`filterTransactions(UUID walletId, LocalDateTime from, LocalDateTime to, StoreWalletTransactionType type, UUID transactionId, Pageable pageable)`: This function filters the wallet transactions based on various criteria, such as wallet ID, time range, transaction type, and transaction ID.\\n\\n`getCurrentStoreWalletId()`: This is a utility function that retrieves the wallet ID of the current store.\\n\\n`mapToTransactionResponse(StoreWalletTransaction tx)`: This function maps a `StoreWalletTransaction` entity to a `StoreWalletTransactionResponse` DTO.\\n\\n`getDisplayName(StoreWalletTransactionType type)`: This is a helper function that returns a user-friendly display name for a given transaction type.\\n\\n`resolveWalletIdForCurrentUser()`: This function retrieves the wallet ID of the current store.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/CartService.java\&quot;:\&quot;This file defines an interface called `CartService` that provides two methods:\\n\\n`CartService`: An interface that defines the contract for managing a customer\\u0027s shopping cart.\\n\\n`addItems`: Adds items to the customer\\u0027s active shopping cart.\\n`getActiveCart`: Retrieves the customer\\u0027s active shopping cart.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformFeeController.java\&quot;:\&quot;This file contains a Spring Boot REST controller class for managing platform fees in an audio e-commerce application.\\n\\n`PlatformFeeController`: A REST controller class that provides CRUD operations for managing platform fees.\\n\\n`create`: Creates a new platform fee.\\n`update`: Updates an existing platform fee.\\n`getActive`: Retrieves the currently active platform fee.\\n`getAll`: Retrieves a list of all platform fees.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AddressResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`AddressResponse`: A data transfer object (DTO) that represents an address response, containing information such as the customer ID, receiver name, phone number, address details, and whether the address is the default.\\n\\nThis file does not contain any functions. It is a simple DTO class used to transfer address-related data between the application and the client.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformFeeServiceImpl.java\&quot;:\&quot;This file contains a service implementation for managing platform fees in an audio e-commerce application.\\n\\n`PlatformFeeServiceImpl`: Implements the `PlatformFeeService` interface to handle CRUD operations for platform fees.\\n\\n`create(PlatformFee fee)`: Creates a new platform fee, deactivating any existing active fee.\\n`update(UUID id, PlatformFee fee)`: Updates an existing platform fee by its ID.\\n`getActiveFee()`: Retrieves the currently active platform fee.\\n`getAll()`: Retrieves a list of all platform fees.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/RegisterResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`RegisterResponse`: A data transfer object (DTO) that represents the response from a user registration process, containing the user\\u0027s email, name, and phone number.\\n\\nThis file does not contain any functions. It is a simple DTO class that is used to encapsulate the data returned from a user registration process.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/exception/GlobalExceptionHandler.java\&quot;:\&quot;This file contains a global exception handler for a Spring Boot application.\\n\\n`GlobalExceptionHandler`: A class that extends `ResponseEntityExceptionHandler` to handle various exceptions that may occur in the application.\\n\\n`handleMethodArgumentNotValid`: A method that handles `MethodArgumentNotValidException` by creating an `ApiError` object with the validation errors and returning a `ResponseEntity` with a `BAD_REQUEST` status.\\n\\n`handleExternalApi`: A method that handles `ExternalApiException` by creating an `ApiError` object with the exception message and returning a `ResponseEntity` with a `BAD_GATEWAY` status.\\n\\n`handleAll`: A method that handles any other `Exception` by creating an `ApiError` object with a generic error message and returning a `ResponseEntity` with an `INTERNAL_SERVER_ERROR` status.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletResponse.java\&quot;:\&quot;This file contains a single class, `WalletResponse`, which is a data transfer object (DTO) used to represent a customer\\u0027s wallet information in an audio e-commerce application.\\n\\n`WalletResponse`: A DTO class that represents a customer\\u0027s wallet, including their unique identifier, customer identifier, balance, currency, status, and the timestamp of their last transaction.\\n\\nThis file does not contain any functions, as it is solely focused on defining the structure of the `WalletResponse` DTO.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/CustomOAuth2UserService.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`CustomOAuth2UserService`: A custom implementation of the `DefaultOAuth2UserService` that can be used to handle the authentication and authorization of users in an OAuth2-based application.\\n\\n`loadUser`: Overrides the `loadUser` method of the `DefaultOAuth2UserService` to allow for additional processing or logging of the user information retrieved during the OAuth2 authentication process.\\n\\nThe purpose of this file is to provide a custom implementation of the `OAuth2UserService` that can be used to handle the authentication and authorization of users in an OAuth2-based application. The `CustomOAuth2UserService` class extends the `DefaultOAuth2UserService` and overrides the `loadUser` method to allow for additional processing or logging of the user information retrieved during the OAuth2 authentication process.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Cart.java\&quot;:\&quot;This file defines the `Cart` entity class for an e-commerce application that sells audio products. The class represents a shopping cart for a customer and includes information about the cart\\u0027s status, items, and total amounts.\\n\\n`Cart`: Represents a shopping cart for a customer, including the cart\\u0027s status, items, and total amounts.\\n\\n`prePersist()`: Sets the `createdAt` and `updatedAt` timestamps when a new `Cart` entity is created.\\n\\n`preUpdate()`: Updates the `updatedAt` timestamp when a `Cart` entity is modified.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductComboRepository.java\&quot;:\&quot;This file contains a single interface, `ProductComboRepository`, which extends the `JpaRepository` interface provided by Spring Data JPA.\\n\\n`ProductComboRepository`: This interface provides a set of CRUD (Create, Read, Update, Delete) operations for the `ProductCombo` entity, which is likely a domain entity in the audio e-commerce application.\\n\\nThe file does not contain any classes or functions. It defines a repository interface that allows the application to interact with the `ProductCombo` entity in the database using the Spring Data JPA framework.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductRepository.java\&quot;:\&quot;This file contains a Java interface named `ProductRepository` that extends the `JpaRepository` interface. The `ProductRepository` interface provides various methods for interacting with the `Product` entity in a database. Here\\u0027s a summary of the classes and functions in this file:\\n\\n`ProductRepository`: This interface provides methods for performing CRUD (Create, Read, Update, Delete) operations on the `Product` entity, as well as more specialized queries such as searching by SKU, slug, status, name, category, store, and price range.\\n\\n`findBySku(String sku)`: Finds a `Product` by its SKU (Stock Keeping Unit).\\n`findBySlug(String slug)`: Finds a `Product` by its slug.\\n`findAllByStatus(ProductStatus status, Pageable pageable)`: Finds all `Product` entities with the specified status, with pagination support.\\n`searchByName(String keyword, Pageable pageable)`: Finds `Product` entities whose name contains the specified keyword, with pagination support.\\n`findAllByCategoryId(UUID categoryId, Pageable pageable)`: Finds all `Product` entities belonging to the specified category, with pagination support.\\n`findAllByStoreId(UUID storeId, Pageable pageable)`: Finds all `Product` entities belonging to the specified store, with pagination support.\\n`findAllByIsFeaturedTrue(Pageable pageable)`: Finds all `Product` entities that are marked as featured, with pagination support.\\n`findAllByProductIdIn(List\\u003cUUID\\u003e productIds)`: Finds all `Product` entities with the specified IDs.\\n`existsByStore_StoreIdAndSku(UUID storeId, String sku)`: Checks if a `Product` with the specified SKU already exists in the specified store.\\n`existsBySlug(String slug)`: Checks if a `Product` with the specified slug already exists.\\n`findByPriceRange(double minPrice, double maxPrice, Pageable pageable)`: Finds all `Product` entities with a price within the specified range, with pagination support.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtTokenProvider.java\&quot;:\&quot;This file contains a single class, `JwtTokenProvider`, which is responsible for generating, validating, and extracting information from JSON Web Tokens (JWT) used for authentication and authorization in the application.\\n\\n`JwtTokenProvider`: A class that provides functionality for generating, validating, and extracting information from JSON Web Tokens (JWT).\\n\\n`generateToken`: Generates a JWT token with the provided user information (ID, customer ID, email, and role).\\n`validateToken`: Validates the provided JWT token.\\n`getAuthentication`: Retrieves the authenticated user details from the provided JWT token.\\n`getRoleFromToken`: Extracts the role from the provided JWT token.\\n`getCustomerIdFromToken`: Extracts the customer ID from the provided JWT token.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/config/DataInitializer.java\&quot;:\&quot;This file is a Spring Boot configuration class that initializes a default platform wallet and a default platform transaction in the application.\\n\\n`DataInitializer`: A component class that initializes the default platform wallet and transaction.\\n\\n`initDefaultPlatformWallet()`: A method that checks if a default platform wallet exists, and if not, creates a new one with a default transaction.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/AccountServiceImpl.java\&quot;:\&quot;This file is an implementation of the `AccountService` interface, which provides functionality for user registration, login, and related operations.\\n\\n`AccountServiceImpl`: Implements the `AccountService` interface and handles user registration, login, and related operations.\\n\\n`registerCustomer`: Registers a new customer account.\\n`registerStore`: Registers a new store owner account.\\n`registerAdmin`: Registers a new admin account.\\n`register`: Handles the common registration logic for different user roles.\\n`createDefaultCustomerForAccount`: Creates a default customer profile for a newly registered account.\\n`createDefaultWalletForCustomer`: Creates a default wallet for a customer.\\n`createDefaultStoreWithWallet`: Creates a default store, store wallet, and initial transaction for a newly registered store owner.\\n`loginCustomer`: Handles customer login.\\n`loginStore`: Handles store owner login.\\n`loginAdmin`: Handles admin login.\\n`login`: Handles the common login logic for different user roles.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreServiceImpl.java\&quot;:\&quot;This file contains a single class `StoreServiceImpl` that implements the `StoreService` interface. The class provides various methods for managing stores, including updating store information, retrieving store details, updating store status, and fetching a list of stores with pagination and search functionality.\\n\\n`StoreServiceImpl`: Implements the `StoreService` interface to provide CRUD operations for stores.\\n\\n`updateStore`: Updates the store information based on the provided `UpdateStoreRequest`.\\n`getStoreById`: Retrieves the store details by the provided store ID.\\n`getStoreByAccountId`: Retrieves the store details by the provided account ID.\\n`updateStoreStatus`: Updates the status of the store with the provided store ID and status.\\n`getAllStores`: Retrieves a paginated list of stores, optionally filtered by a keyword.\\n`getStoreByEmail`: Retrieves the store by the provided email.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/AccountService.java\&quot;:\&quot;This file does not contain any classes, but rather an interface named `AccountService` that defines the following functions:\\n\\n`registerCustomer`: Registers a new customer.\\n`loginCustomer`: Logs in a customer.\\n`registerStore`: Registers a new store.\\n`loginStore`: Logs in a store.\\n`registerAdmin`: Registers a new admin.\\n`loginAdmin`: Logs in an admin.\\n\\nThe purpose of this interface is to provide a set of methods for handling user authentication and registration for customers, stores, and administrators in an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UpdateStoreResponse.java\&quot;:\&quot;This file contains a single class:\\n\\n`UpdateStoreResponse`: A data transfer object (DTO) that represents the response from updating a store in an audio e-commerce application.\\n\\nThis file does not contain any functions. It is a simple DTO class that holds the updated information for a store, including the store ID, name, description, logo URL, cover image URL, address, phone number, and email.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreStatus.java\&quot;:\&quot;This file defines an enumeration called `StoreStatus` that represents the different statuses a store can have in an audio e-commerce application. The enumeration includes the following values:\\n\\n`INACTIVE`: The store is currently inactive.\\n`PENDING`: The store is pending approval.\\n`ACTIVE`: The store is currently active.\\n`REJECTED`: The store has been rejected.\\n`SUSPENDED`: The store has been suspended.\\n\\nThis file does not contain any classes or functions, but rather defines an enumeration that can be used throughout the application to represent the different states of a store.\&quot;,\&quot;/src/main/resources/templates/email/kyc_approved.html\&quot;:\&quot;This file appears to be an HTML template for an email or web page that notifies a store owner that their store has been successfully verified (KYC approved). The file does not contain any classes or functions, but rather it displays a greeting, the store name, and a link to the store management page.\\n\\nThe file performs the following tasks:\\n\\n1. Displays a greeting to the store owner using their name.\\n2. Informs the store owner that their store has been successfully verified.\\n3. Provides a link to the store management page where the store owner can start adding products.\\n4. Includes a closing message from the AudioEcommerce team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/EmailSendController.java\&quot;:\&quot;There are no classes or functions in the provided file. The file appears to be an empty XML document with a `\\u003cdocument\\u003e` tag, but no content within it.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreKycServiceImpl.java\&quot;:\&quot;This file contains a service implementation class `StoreKycServiceImpl` that handles the business logic related to store KYC (Know Your Customer) management.\\n\\n`StoreKycServiceImpl`: Implements the `StoreKycService` interface and provides methods for submitting, approving, and rejecting store KYC requests, as well as querying the status of KYC requests.\\n\\n`submitKyc`: Allows a store to submit a KYC request, saves the request, updates the store status, and sends a confirmation email to the store owner.\\n\\n`approveKyc`: Approves a KYC request, updates the store status to active, creates a default store wallet if it doesn\\u0027t exist, and sends an approval email to the store owner.\\n\\n`rejectKyc`: Rejects a KYC request, updates the store status to rejected, and sends a rejection email to the store owner with the provided reason.\\n\\n`getAllRequestsOfStore`: Retrieves all KYC requests for a specific store, ordered by the creation date in descending order.\\n\\n`getRequestDetail`: Retrieves the details of a specific KYC request.\\n\\n`getRequestsByStatus`: Retrieves all KYC requests with a specific status, ordered by the submission date in descending order.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/config/CloudinaryConfig.java\&quot;:\&quot;This file is a Spring configuration class that sets up a Cloudinary client for use in the application.\\n\\n`CloudinaryConfig`: This class configures the Cloudinary client using values from the application\\u0027s properties.\\n\\n`cloudinary()`: This function creates and returns a Cloudinary client instance using the configured values.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycRejectedData.java\&quot;:\&quot;This file contains a single data transfer object (DTO) class:\\n\\n`KycRejectedData`: A DTO class that holds information related to a rejected KYC (Know Your Customer) application, including the email, owner name, store name, rejection reason, and the site URL.\\n\\nThis file does not contain any functions. It is a simple DTO class used to encapsulate and transfer data related to a rejected KYC application in an audio e-commerce application.\&quot;,\&quot;/src/main/resources/templates/email/welcome_customer.html\&quot;:\&quot;This file appears to be an HTML template for a welcome email to a customer of an audio e-commerce website. It does not contain any classes or functions, but rather displays a greeting, a call to action, and a closing message.\\n\\nThe file performs the following tasks:\\n\\n1. Displays a greeting to the customer, using a variable `${name}` to personalize the message.\\n2. Welcomes the customer as a new customer of the AudioEcommerce website.\\n3. Provides a link to the website\\u0027s homepage, using the variable `${siteUrl}`.\\n4. Includes a closing message from the AudioEcommerce team.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/WalletTxnRequest.java\&quot;:\&quot;This file contains a single class, `WalletTxnRequest`, which is a data transfer object (DTO) used to represent a request for a wallet transaction.\\n\\n`WalletTxnRequest`: A DTO class that represents a request for a wallet transaction, including the transaction amount, description, and optional order ID.\\n\\nThe file does not contain any functions, but rather defines the structure and validation rules for the `WalletTxnRequest` DTO, which is likely used in a larger application context to handle wallet-related transactions.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/config/CategoryInitializer.java\&quot;:\&quot;This file is a Spring Boot configuration class that initializes the default categories for an audio e-commerce application.\\n\\n`CategoryInitializer`: This class implements the `CommandLineRunner` interface, which allows it to run a specific piece of code when the application starts up.\\n\\n`run(String... args)`: This function is responsible for seeding the default categories in the database. It checks if the categories already exist, and if not, it creates them with a default description and sort order.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/AccountController.java\&quot;:\&quot;This file is a Spring Boot controller class that handles account-related operations for an audio e-commerce application.\\n\\n`AccountController`: A REST controller class that provides endpoints for user registration and login.\\n\\n`registerCustomer`: Registers a new customer account.\\n`registerStore`: Registers a new store account.\\n`registerAdmin`: Registers a new admin account.\\n`loginCustomer`: Authenticates a customer and returns a response.\\n`loginStore`: Authenticates a store and returns a response.\\n`loginAdmin`: Authenticates an admin and returns a response.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletTransactionRepository.java\&quot;:\&quot;This file contains a Java interface named `WalletTransactionRepository` that extends the `JpaRepository` interface. The purpose of this interface is to provide methods for interacting with the `WalletTransaction` entity in the database.\\n\\n`WalletTransactionRepository`: An interface that provides methods for querying and managing `WalletTransaction` entities in the database.\\n\\n`findByWallet_Customer_IdOrderByCreatedAtDesc`: Retrieves a paginated list of `WalletTransaction` entities for a given customer ID, ordered by the creation date in descending order.\\n\\n`findFirstByWallet_Customer_IdAndOrderIdAndTransactionTypeOrderByCreatedAtDesc`: Retrieves the most recent `WalletTransaction` entity for a given customer ID, order ID, and transaction type, ordered by the creation date in descending order.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/CustomerService.java\&quot;:\&quot;This file defines an interface called `CustomerService` that provides methods for managing customer-related operations in an e-commerce application.\\n\\n`CustomerService`: An interface that defines methods for creating, retrieving, searching, updating, and soft-deleting customer records, as well as managing customer addresses.\\n\\n`create(CustomerCreateRequest req)`: Creates a new customer record based on the provided `CustomerCreateRequest`.\\n`get(UUID id)`: Retrieves a customer record by their unique identifier.\\n`search(String keyword, CustomerStatus status, Pageable pageable)`: Searches for customer records based on a keyword and customer status, with pagination support.\\n`update(UUID id, CustomerUpdateRequest req)`: Updates an existing customer record with the provided `CustomerUpdateRequest`.\\n`softDelete(UUID id)`: Soft-deletes a customer record, marking it as inactive.\\n`listAddresses(UUID customerId)`: Retrieves a list of addresses associated with a customer.\\n`addAddress(UUID customerId, AddressCreateRequest req)`: Adds a new address for a customer.\\n`updateAddress(UUID customerId, UUID addressId, AddressUpdateRequest req)`: Updates an existing address for a customer.\\n`deleteAddress(UUID customerId, UUID addressId)`: Deletes an address associated with a customer.\\n`setDefaultAddress(UUID customerId, UUID addressId)`: Sets a default address for a customer.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/OrderData.java\&quot;:\&quot;This file contains a single class, `OrderData`, which is a data class that holds information about an order placed in an audio e-commerce application.\\n\\n`OrderData`: A data class that holds the email address, order code, and total amount of an order.\\n\\nThis file does not contain any functions, only the `OrderData` class.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformFee.java\&quot;:\&quot;This file defines a JPA entity class `PlatformFee` that represents a platform fee in an e-commerce application.\\n\\n`PlatformFee`: A class that represents a platform fee, including its fee percentage, effective date, description, and status.\\n\\nThe file does not contain any functions, but rather defines the properties and annotations for the `PlatformFee` entity class, which is used to persist platform fee data in a database.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/ProductCombo.java\&quot;:\&quot;This file defines the `ProductCombo` entity, which represents a product combo in an e-commerce application. The entity has various fields to store information about the combo, such as the store that created it, the category, the included products, the basic information (name, description, images, video), the technical specifications (weight, stock quantity, shipping address, warehouse location), the pricing information, and the status (active/inactive) and timestamps.\\n\\nThere are no explicit classes or functions defined in this file. The file is focused on defining the structure and properties of the `ProductCombo` entity using the Lombok annotations and JPA annotations for the database mapping.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreService.java\&quot;:\&quot;This file defines an interface called `StoreService` that provides methods for managing stores in an e-commerce application.\\n\\n`StoreService`: Defines the interface for managing stores in the e-commerce application.\\n\\n`getStoreById`: Retrieves a store by its unique identifier (UUID).\\n`getStoreByAccountId`: Retrieves a store by the account ID associated with it.\\n`updateStore`: Updates the details of a store.\\n`updateStoreStatus`: Updates the status of a store.\\n`getAllStores`: Retrieves a list of all stores, with optional pagination and keyword filtering.\\n`getStoreByEmail`: Retrieves a store by its email address.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletRepository.java\&quot;:\&quot;This file contains a repository interface for the `StoreWallet` entity and its related `StoreWalletTransaction` entity.\\n\\n`StoreWalletRepository`: This interface extends the `JpaRepository` interface and provides methods for interacting with the `StoreWallet` entity in the database.\\n\\n`findByStore_StoreId(UUID storeId)`: This method finds the `StoreWallet` entity associated with the given store ID.\\n\\n`existsByStore_StoreId(UUID storeId)`: This method checks if a `StoreWallet` entity exists for the given store ID.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/controller/CartController.java\&quot;:\&quot;This file contains a Spring Boot controller class for managing the cart functionality of an e-commerce application.\\n\\n`CartController`: A REST controller class that provides endpoints for managing the customer\\u0027s shopping cart.\\n\\n`getActive`: Retrieves the active cart for the specified customer.\\n`addItems`: Adds one or more products or combos to the customer\\u0027s active cart.\\n\\nThe file also includes Swagger annotations for documenting the API endpoints.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateResolver.java\&quot;:\&quot;This file is a part of the `org.example.audio_ecommerce.email` package and contains the `EmailTemplateResolver` class, which is responsible for resolving and generating email templates based on different types of email template types and their corresponding data.\\n\\n`EmailTemplateResolver`: A class that resolves and generates email templates based on different types of email template types and their corresponding data.\\n\\n`resolve(EmailTemplateType, Object)`: A method that resolves and generates an `EmailTemplate` based on the provided `EmailTemplateType` and data.\\n\\n`accountWelcome(AccountData)`: A method that generates an email template for welcoming a new account based on the provided `AccountData`.\\n\\n`accountCreated(AccountData)`: A method that generates an email template for a newly created account based on the provided `AccountData`.\\n\\n`kycSubmitted(KycSubmittedData)`: A method that generates an email template for a submitted KYC (Know Your Customer) application based on the provided `KycSubmittedData`.\\n\\n`kycApproved(KycApprovedData)`: A method that generates an email template for an approved KYC application based on the provided `KycApprovedData`.\\n\\n`kycRejected(KycRejectedData)`: A method that generates an email template for a rejected KYC application based on the provided `KycRejectedData`.\\n\\n`orderConfirmed(OrderData)`: A method that generates an email template for a confirmed order based on the provided `OrderData`.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Store.java\&quot;:\&quot;This file defines the `Store` entity class for an audio e-commerce application. It represents a store that sells products and is associated with an `Account` and a `StoreWallet`. The class has various properties such as store name, description, logo, cover image, address, phone number, email, rating, and status. It also has a one-to-many relationship with the `Product` entity.\\n\\n`Store`: Represents a store that sells products in an audio e-commerce application.\&quot;,\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/LoyaltyLevel.java\&quot;:\&quot;This file defines an enumeration called `LoyaltyLevel` that represents different levels of customer loyalty, such as Bronze, Silver, Gold, and Diamond.\\n\\nThe file does not contain any classes or functions, but rather defines an enumeration that can be used to represent different levels of customer loyalty in an audio e-commerce application.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;D:/DO_AN/doan/Audio_E-commerce&quot;:&quot;{\&quot;/src/main/java/org/example/audio_ecommerce/config/CategoryInitializer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/config/CategoryInitializer.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryInitializer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;run\&quot;,\&quot;method_parameters\&quot;:\&quot;(String... args)\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[36,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/config/CloudinaryConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/config/CloudinaryConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;CloudinaryConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;cloudinary\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;Cloudinary\&quot;,\&quot;scope\&quot;:[[23,4],[31,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/config/DataInitializer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/config/DataInitializer.java\&quot;,\&quot;file_name\&quot;:\&quot;DataInitializer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;initDefaultPlatformWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[63,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/config/OpenApiConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/config/OpenApiConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;OpenApiConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;api\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;OpenAPI\&quot;,\&quot;scope\&quot;:[[12,4],[24,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/config/SecurityConfig.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/config/SecurityConfig.java\&quot;,\&quot;file_name\&quot;:\&quot;SecurityConfig.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;passwordEncoder\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;PasswordEncoder\&quot;,\&quot;scope\&quot;:[[33,4],[34,77]]},{\&quot;method_name\&quot;:\&quot;securityFilterChain\&quot;,\&quot;method_parameters\&quot;:\&quot;(HttpSecurity http)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;HttpSecurity\&quot;,\&quot;name\&quot;:\&quot;http\&quot;}],\&quot;return_type\&quot;:\&quot;SecurityFilterChain\&quot;,\&quot;scope\&quot;:[[36,4],[85,5]]},{\&quot;method_name\&quot;:\&quot;restAuthEntryPoint\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;AuthenticationEntryPoint\&quot;,\&quot;scope\&quot;:[[88,4],[95,5]]},{\&quot;method_name\&quot;:\&quot;authenticationManager\&quot;,\&quot;method_parameters\&quot;:\&quot;(AuthenticationConfiguration config)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;AuthenticationConfiguration\&quot;,\&quot;name\&quot;:\&quot;config\&quot;}],\&quot;return_type\&quot;:\&quot;AuthenticationManager\&quot;,\&quot;scope\&quot;:[[97,4],[100,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/AccountController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/AccountController.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;registerCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;registerStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[24,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;registerAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;loginCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[38,5]]},{\&quot;method_name\&quot;:\&quot;loginStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[40,4],[43,5]]},{\&quot;method_name\&quot;:\&quot;loginAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Valid @RequestBody LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[45,4],[48,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/CartController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/CartController.java\&quot;,\&quot;file_name\&quot;:\&quot;CartController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getActive\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID khách hàng (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[27,4],[41,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/CategoryController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/CategoryController.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllCategories\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @RequestParam(required \\u003d false) String keyword\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[21,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;getCategoryById\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;createCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(@RequestBody CategoryRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;updateCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @PathVariable UUID categoryId,\\r\\n            @RequestBody CategoryRequest request\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[41,4],[48,5]]},{\&quot;method_name\&quot;:\&quot;deleteCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[50,4],[54,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/CustomerController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/CustomerController.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;get\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[30,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;search\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @RequestParam(required \\u003d false) String keyword,\\r\\n            @RequestParam(required \\u003d false) CustomerStatus status,\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;0\\\&quot;) int page,\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;20\\\&quot;) int size,\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;createdAt,desc\\\&quot;) String sort\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;CustomerStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sort\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[48,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID id,\\r\\n                                   @Valid @RequestBody CustomerUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;CustomerUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[50,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;softDelete\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[56,4],[60,5]]},{\&quot;method_name\&quot;:\&quot;listAddresses\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[64,4],[67,5]]},{\&quot;method_name\&quot;:\&quot;addAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID customerId,\\r\\n                                      @Valid @RequestBody AddressCreateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;AddressCreateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[69,4],[74,5]]},{\&quot;method_name\&quot;:\&quot;updateAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID customerId,\\r\\n                                         @PathVariable UUID addressId,\\r\\n                                         @Valid @RequestBody AddressUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;},{\&quot;type\&quot;:\&quot;AddressUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[76,4],[81,5]]},{\&quot;method_name\&quot;:\&quot;deleteAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID customerId,\\r\\n                              @PathVariable UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[83,4],[88,5]]},{\&quot;method_name\&quot;:\&quot;setDefault\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID customerId,\\r\\n                           @PathVariable UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[90,4],[95,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/EmailSendController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/EmailSendController.java\&quot;,\&quot;file_name\&quot;:\&quot;EmailSendController.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformFeeController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformFeeController.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformFeeController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;create\&quot;,\&quot;method_parameters\&quot;:\&quot;(@RequestBody PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID id, @RequestBody PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;getActive\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;getAll\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[32,4],[35,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformWalletController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/PlatformWalletController.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWalletController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllWallets\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[39,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;getWalletByOwner\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID của chủ sở hữu (Shop hoặc Customer)\\\&quot;, required \\u003d true, example \\u003d \\\&quot;d7f1c3c8-0b33-49d4-bad4-9e0bb2b8b9a3\\\&quot;)\\r\\n            @PathVariable UUID ownerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;ownerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[59,4],[77,5]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        @Parameter(description \\u003d \\\&quot;ID cửa hàng cần lọc (UUID)\\\&quot;, example \\u003d \\\&quot;d7f1c3c8-0b33-49d4-bad4-9e0bb2b8b9a3\\\&quot;)\\r\\n        @RequestParam(required \\u003d false) UUID storeId,\\r\\n\\r\\n        @Parameter(description \\u003d \\\&quot;ID khách hàng cần lọc (UUID)\\\&quot;, example \\u003d \\\&quot;a5e1f3b8-2d44-4ef1-bcd4-98c12aee99ff\\\&quot;)\\r\\n        @RequestParam(required \\u003d false) UUID customerId,\\r\\n\\r\\n        @Parameter(description \\u003d \\\&quot;Trạng thái giao dịch (PENDING, DONE, FAILED)\\\&quot;, example \\u003d \\\&quot;DONE\\\&quot;)\\r\\n        @RequestParam(required \\u003d false) TransactionStatus status,\\r\\n\\r\\n        @Parameter(description \\u003d \\\&quot;Loại giao dịch (HOLD, RELEASE, REFUND, WITHDRAW, ...)\\\&quot;, example \\u003d \\\&quot;REFUND\\\&quot;)\\r\\n        @RequestParam(required \\u003d false) TransactionType type,\\r\\n\\r\\n        @Parameter(description \\u003d \\\&quot;Ngày bắt đầu lọc (ISO format)\\\&quot;, example \\u003d \\\&quot;2025-10-01T00:00:00\\\&quot;)\\r\\n        @RequestParam(required \\u003d false)\\r\\n        @DateTimeFormat(iso \\u003d DateTimeFormat.ISO.DATE_TIME)\\r\\n        LocalDateTime from,\\r\\n\\r\\n        @Parameter(description \\u003d \\\&quot;Ngày kết thúc lọc (ISO format)\\\&quot;, example \\u003d \\\&quot;2025-10-12T23:59:59\\\&quot;)\\r\\n        @RequestParam(required \\u003d false)\\r\\n        @DateTimeFormat(iso \\u003d DateTimeFormat.ISO.DATE_TIME)\\r\\n        LocalDateTime to\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;TransactionStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;TransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[82,4],[124,2]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductComboController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductComboController.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductComboController.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/ProductController.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllProducts\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @RequestParam(required \\u003d false) UUID categoryId,\\r\\n            @RequestParam(required \\u003d false) UUID storeId,\\r\\n            @RequestParam(required \\u003d false) String keyword,\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;0\\\&quot;) int page,\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;10\\\&quot;) int size,\\r\\n            @RequestParam(required \\u003d false) ProductStatus status\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;ProductStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;getProductById\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[42,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;createProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(@RequestBody ProductRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[51,4],[69,5]]},{\&quot;method_name\&quot;:\&quot;updateProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        @PathVariable UUID productId,\\r\\n        @RequestBody ProductRequest request\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[74,4],[92,1]]},{\&quot;method_name\&quot;:\&quot;disableProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(@PathVariable UUID productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[97,4],[109,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreController.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getStoreById\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID cửa hàng (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,4],[37,5]]},{\&quot;method_name\&quot;:\&quot;getStoreByAccount\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID tài khoản (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[39,4],[49,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreKycController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreKycController.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKycController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;submitKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID cửa hàng (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID storeId,\\r\\n            @io.swagger.v3.oas.annotations.parameters.RequestBody(\\r\\n                    description \\u003d \\\&quot;Thông tin KYC cần gửi\\\&quot;,\\r\\n                    required \\u003d true,\\r\\n                    content \\u003d @Content(\\r\\n                            schema \\u003d @Schema(implementation \\u003d StoreKycRequest.class),\\r\\n                            examples \\u003d @ExampleObject(value \\u003d \\\&quot;\\\&quot;\\\&quot;\\r\\n                                    {\\r\\n                                      \\\&quot;storeName\\\&quot;: \\\&quot;AudioKing Hi-Fi\\\&quot;,\\r\\n                                      \\\&quot;phoneNumber\\\&quot;: \\\&quot;0987654321\\\&quot;,\\r\\n                                      \\\&quot;businessLicenseNumber\\\&quot;: \\\&quot;123456789\\\&quot;,\\r\\n                                      \\\&quot;taxCode\\\&quot;: \\\&quot;0312345678\\\&quot;,\\r\\n                                      \\\&quot;bankName\\\&quot;: \\\&quot;Vietcombank\\\&quot;,\\r\\n                                      \\\&quot;bankAccountName\\\&quot;: \\\&quot;CÔNG TY TNHH AUDIO KING\\\&quot;,\\r\\n                                      \\\&quot;bankAccountNumber\\\&quot;: \\\&quot;1234567890\\\&quot;,\\r\\n                                      \\\&quot;idCardFrontUrl\\\&quot;: \\\&quot;https://cdn.example.com/front.png\\\&quot;,\\r\\n                                      \\\&quot;idCardBackUrl\\\&quot;: \\\&quot;https://cdn.example.com/back.png\\\&quot;,\\r\\n                                      \\\&quot;businessLicenseUrl\\\&quot;: \\\&quot;https://cdn.example.com/license.pdf\\\&quot;,\\r\\n                                      \\\&quot;isOfficial\\\&quot;: true\\r\\n                                    }\\r\\n                            \\\&quot;\\\&quot;\\\&quot;)\\r\\n                    )\\r\\n            )\\r\\n            @Valid @RequestBody StoreKycRequest request) {\\r\\n        return ResponseEntity.ok(storeKycService.submitKyc(storeId, request));\\r\\n    }\\r\\n\\r\\n    @Operation(summary \\u003d \\\&quot;Lấy danh sách tất cả request KYC của cửa hàng\\\&quot;, description \\u003d \\\&quot;Dành cho chủ shop xem lịch sử các lần gửi KYC.\\\&quot;)\\r\\n    @ApiResponse(responseCode \\u003d \\\&quot;200\\\&quot;, description \\u003d \\\&quot;Danh sách KYC\\\&quot;)\\r\\n    @GetMapping\\r\\n    public ResponseEntity\\u003cList\\u003cStoreKyc\\u003e\\u003e getAllRequests(\\r\\n            @Parameter(description \\u003d \\\&quot;ID cửa hàng (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID storeId) {\\r\\n        return ResponseEntity.ok(storeKycService.getAllRequestsOfStore(storeId));\\r\\n    }\\r\\n\\r\\n    @Operation(summary \\u003d \\\&quot;Xem chi tiết một request KYC\\\&quot;, description \\u003d \\\&quot;Trả về toàn bộ chi tiết của một yêu cầu KYC cụ thể.\\\&quot;)\\r\\n    @ApiResponses({\\r\\n            @ApiResponse(responseCode \\u003d \\\&quot;200\\\&quot;, description \\u003d \\\&quot;Lấy chi tiết thành công\\\&quot;),\\r\\n            @ApiResponse(responseCode \\u003d \\\&quot;404\\\&quot;, description \\u003d \\\&quot;Không tìm thấy request\\\&quot;)\\r\\n    })\\r\\n    @GetMapping(\\\&quot;/{kycId}\\\&quot;)\\r\\n    public ResponseEntity\\u003cStoreKyc\\u003e getRequestDetail(\\r\\n            @Parameter(description \\u003d \\\&quot;ID KYC (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable String kycId) {\\r\\n        return ResponseEntity.ok(storeKycService.getRequestDetail(kycId));\\r\\n    }\\r\\n\\r\\n    @Operation(summary \\u003d \\\&quot;Admin: Lọc danh sách KYC theo trạng thái\\\&quot;, description \\u003d \\\&quot;Lấy danh sách tất cả request theo trạng thái (`PENDING`, `APPROVED`, `REJECTED`).\\\&quot;)\\r\\n    @ApiResponse(responseCode \\u003d \\\&quot;200\\\&quot;, description \\u003d \\\&quot;Danh sách KYC theo trạng thái\\\&quot;)\\r\\n    @GetMapping(\\\&quot;/filter\\\&quot;)\\r\\n    public ResponseEntity\\u003cBaseResponse\\u003e getAllKycByStatus(\\r\\n            @Parameter(description \\u003d \\\&quot;Trạng thái KYC\\\&quot;, example \\u003d \\\&quot;PENDING\\\&quot;)\\r\\n            @RequestParam KycStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;getAllKycByStatus\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,4],[100,5]]},{\&quot;method_name\&quot;:\&quot;approve\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID KYC (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable String kycId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[102,4],[113,5]]},{\&quot;method_name\&quot;:\&quot;reject\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID KYC (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable String kycId,\\r\\n            @Parameter(description \\u003d \\\&quot;Lý do từ chối\\\&quot;, example \\u003d \\\&quot;Thiếu giấy phép kinh doanh\\\&quot;)\\r\\n            @RequestParam String reason)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;reason\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[115,4],[128,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreWalletController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/StoreWalletController.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getMyWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;getMyWalletTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;Trang hiện tại (mặc định \\u003d 0)\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;0\\\&quot;) int page,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Số lượng giao dịch mỗi trang (mặc định \\u003d 10)\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;10\\\&quot;) int size,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Loại giao dịch (tùy chọn)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false) String type\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[55,4],[77,5]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID ví cửa hàng (tùy chọn — nếu không truyền, lấy của cửa hàng đang đăng nhập)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false)\\r\\n            UUID walletId,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Từ thời điểm (ISO format, VD: 2025-10-13T00:00:00)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false)\\r\\n            @DateTimeFormat(iso \\u003d DateTimeFormat.ISO.DATE_TIME)\\r\\n            LocalDateTime from,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Đến thời điểm (ISO format, VD: 2025-10-13T23:59:59)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false)\\r\\n            @DateTimeFormat(iso \\u003d DateTimeFormat.ISO.DATE_TIME)\\r\\n            LocalDateTime to,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Loại giao dịch (DEPOSIT, WITHDRAW, REFUND, ...)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false)\\r\\n            StoreWalletTransactionType type,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Mã giao dịch cụ thể (UUID)\\\&quot;)\\r\\n            @RequestParam(required \\u003d false)\\r\\n            UUID transactionId,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Trang hiện tại (mặc định \\u003d 0)\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;0\\\&quot;) int page,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Số lượng mỗi trang (mặc định \\u003d 10)\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;10\\\&quot;) int size,\\r\\n\\r\\n            @Parameter(description \\u003d \\\&quot;Sắp xếp, định dạng: \\u0027thuộc_tính:hướng\\u0027 (VD: createdAt:desc)\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;createdAt:desc\\\&quot;) String sort\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;},{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;transactionId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sort\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[82,4],[151,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/TestController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/TestController.java\&quot;,\&quot;file_name\&quot;:\&quot;TestController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;publicApi\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;privateApi\&quot;,\&quot;method_parameters\&quot;:\&quot;(Authentication authentication)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Authentication\&quot;,\&quot;name\&quot;:\&quot;authentication\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;testRole\&quot;,\&quot;method_parameters\&quot;:\&quot;(@AuthenticationPrincipal org.springframework.security.core.userdetails.User user)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;user\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[24,4],[28,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/UploadController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/UploadController.java\&quot;,\&quot;file_name\&quot;:\&quot;UploadController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;uploadImage\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;File ảnh cần upload\\\&quot;,\\r\\n                    required \\u003d true,\\r\\n                    content \\u003d @Content(\\r\\n                            mediaType \\u003d MediaType.MULTIPART_FORM_DATA_VALUE,\\r\\n                            schema \\u003d @Schema(type \\u003d \\\&quot;string\\\&quot;, format \\u003d \\\&quot;binary\\\&quot;)\\r\\n                    ))\\r\\n            @RequestPart(\\\&quot;file\\\&quot;) MultipartFile file\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;MultipartFile\&quot;,\&quot;name\&quot;:\&quot;file\&quot;}],\&quot;return_type\&quot;:\&quot;UploadResponse\&quot;,\&quot;scope\&quot;:[[27,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;uploadImages\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;Danh sách ảnh cần upload (cùng key \\u003d files)\\\&quot;,\\r\\n                    required \\u003d true,\\r\\n                    content \\u003d @Content(\\r\\n                            mediaType \\u003d MediaType.MULTIPART_FORM_DATA_VALUE,\\r\\n                            array \\u003d @ArraySchema(schema \\u003d @Schema(type \\u003d \\\&quot;string\\\&quot;, format \\u003d \\\&quot;binary\\\&quot;))\\r\\n                    ))\\r\\n            @RequestPart(\\\&quot;files\\\&quot;) List\\u003cMultipartFile\\u003e files\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;files\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[48,4],[71,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/controller/WalletController.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/controller/WalletController.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletController.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;list\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Parameter(description \\u003d \\\&quot;ID khách hàng (UUID)\\\&quot;, required \\u003d true)\\r\\n            @PathVariable UUID customerId,\\r\\n            @Parameter(description \\u003d \\\&quot;Trang (bắt đầu từ 0)\\\&quot;, example \\u003d \\\&quot;0\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;0\\\&quot;) int page,\\r\\n            @Parameter(description \\u003d \\\&quot;Số bản ghi mỗi trang\\\&quot;, example \\u003d \\\&quot;20\\\&quot;)\\r\\n            @RequestParam(defaultValue \\u003d \\\&quot;20\\\&quot;) int size)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,4],[51,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddCartItemsRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddCartItemsRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;AddCartItemsRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressCreateRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressCreateRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;AddressCreateRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressUpdateRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/AddressUpdateRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;AddressUpdateRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CategoryRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CategoryRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateComboRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateComboRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateComboRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateProductRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CreateProductRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateProductRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerCreateRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerCreateRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerCreateRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerUpdateRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/CustomerUpdateRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerUpdateRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/LoginRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/LoginRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;LoginRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/PlatformTransactionFilterRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/PlatformTransactionFilterRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformTransactionFilterRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ProductRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ProductRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/RegisterRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/RegisterRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;RegisterRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/StoreKycRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/StoreKycRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKycRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ToggleItemRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/ToggleItemRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;ToggleItemRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateComboRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateComboRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateComboRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateProductRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateProductRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateProductRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateQtyRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateQtyRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateQtyRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateStoreRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreStatusRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/UpdateStoreStatusRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateStoreStatusRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/WalletTxnRequest.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/request/WalletTxnRequest.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTxnRequest.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AccountResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AccountResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AddressResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/AddressResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;AddressResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/BaseResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/BaseResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;BaseResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CartResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CartResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;CartResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ComboResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ComboResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;ComboResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CustomerResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/CustomerResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/LoginResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/LoginResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;LoginResponse.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;LoginResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(String accessToken, AccountResponse user)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;accessToken\&quot;},{\&quot;type\&quot;:\&quot;AccountResponse\&quot;,\&quot;name\&quot;:\&quot;user\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[14,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PagedResult.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PagedResult.java\&quot;,\&quot;file_name\&quot;:\&quot;PagedResult.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformTransactionResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformTransactionResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformTransactionResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformWalletResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/PlatformWalletResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWalletResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ProductResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/ProductResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/RegisterResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/RegisterResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;RegisterResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletSummaryResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletSummaryResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletSummaryResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletTransactionResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/StoreWalletTransactionResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletTransactionResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UpdateStoreResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UpdateStoreResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;UpdateStoreResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UploadResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/UploadResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;UploadResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletTransactionResponse.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/dto/response/WalletTransactionResponse.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTransactionResponse.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycApprovedData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycApprovedData.java\&quot;,\&quot;file_name\&quot;:\&quot;KycApprovedData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycRejectedData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycRejectedData.java\&quot;,\&quot;file_name\&quot;:\&quot;KycRejectedData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycSubmittedData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/dto/KycSubmittedData.java\&quot;,\&quot;file_name\&quot;:\&quot;KycSubmittedData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/AccountData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/AccountData.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailService.java\&quot;,\&quot;file_name\&quot;:\&quot;EmailService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;sendEmail\&quot;,\&quot;method_parameters\&quot;:\&quot;(EmailTemplateType type, Object data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;EmailTemplateType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;Object\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[29,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplate.java\&quot;,\&quot;file_name\&quot;:\&quot;EmailTemplate.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateResolver.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateResolver.java\&quot;,\&quot;file_name\&quot;:\&quot;EmailTemplateResolver.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;resolve\&quot;,\&quot;method_parameters\&quot;:\&quot;(EmailTemplateType type, Object data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;EmailTemplateType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;Object\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[16,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;accountWelcome\&quot;,\&quot;method_parameters\&quot;:\&quot;(AccountData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;AccountData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[29,4],[56,5]]},{\&quot;method_name\&quot;:\&quot;accountCreated\&quot;,\&quot;method_parameters\&quot;:\&quot;(AccountData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;AccountData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[59,4],[68,5]]},{\&quot;method_name\&quot;:\&quot;kycSubmitted\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycSubmittedData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycSubmittedData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[71,4],[90,5]]},{\&quot;method_name\&quot;:\&quot;kycApproved\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycApprovedData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycApprovedData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[93,4],[105,5]]},{\&quot;method_name\&quot;:\&quot;kycRejected\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycRejectedData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycRejectedData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[108,4],[121,5]]},{\&quot;method_name\&quot;:\&quot;orderConfirmed\&quot;,\&quot;method_parameters\&quot;:\&quot;(OrderData data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OrderData\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;EmailTemplate\&quot;,\&quot;scope\&quot;:[[124,4],[134,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/EmailTemplateType.java\&quot;,\&quot;file_name\&quot;:\&quot;EmailTemplateType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/OrderData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/OrderData.java\&quot;,\&quot;file_name\&quot;:\&quot;OrderData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/email/StoreData.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/email/StoreData.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreData.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/AddressLabel.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/AddressLabel.java\&quot;,\&quot;file_name\&quot;:\&quot;AddressLabel.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartItemType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartItemType.java\&quot;,\&quot;file_name\&quot;:\&quot;CartItemType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CartStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;CartStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CategoryEnum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CategoryEnum.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryEnum.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CustomerStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/CustomerStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/Gender.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/Gender.java\&quot;,\&quot;file_name\&quot;:\&quot;Gender.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/KycStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/KycStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;KycStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/LoyaltyLevel.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/LoyaltyLevel.java\&quot;,\&quot;file_name\&quot;:\&quot;LoyaltyLevel.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/ProductStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/ProductStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/RoleEnum.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/RoleEnum.java\&quot;,\&quot;file_name\&quot;:\&quot;RoleEnum.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;RoleEnum\&quot;,\&quot;method_parameters\&quot;:\&quot;(int value)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;value\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;getValue\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[18,4],[20,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreWalletTransactionType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/StoreWalletTransactionType.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletTransactionType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;TransactionStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/TransactionType.java\&quot;,\&quot;file_name\&quot;:\&quot;TransactionType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletOwnerType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletOwnerType.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletOwnerType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionStatus.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionStatus.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTransactionStatus.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionType.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Enum/WalletTransactionType.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTransactionType.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Account.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Account.java\&quot;,\&quot;file_name\&quot;:\&quot;Account.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/BaseEntity.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/BaseEntity.java\&quot;,\&quot;file_name\&quot;:\&quot;BaseEntity.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Cart.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Cart.java\&quot;,\&quot;file_name\&quot;:\&quot;Cart.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;prePersist\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[49,4],[49,93]]},{\&quot;method_name\&quot;:\&quot;preUpdate\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[50,4],[50,70]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/CartItem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/CartItem.java\&quot;,\&quot;file_name\&quot;:\&quot;CartItem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getReferenceId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;UUID\&quot;,\&quot;scope\&quot;:[[55,4],[59,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Category.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Category.java\&quot;,\&quot;file_name\&quot;:\&quot;Category.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Customer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Customer.java\&quot;,\&quot;file_name\&quot;:\&quot;Customer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;addAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerAddress addr, boolean makeDefault)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerAddress\&quot;,\&quot;name\&quot;:\&quot;addr\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;makeDefault\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[140,4],[147,5]]},{\&quot;method_name\&quot;:\&quot;setDefaultAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerAddress addr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerAddress\&quot;,\&quot;name\&quot;:\&quot;addr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[149,4],[153,5]]},{\&quot;method_name\&quot;:\&quot;removeAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerAddress addr)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerAddress\&quot;,\&quot;name\&quot;:\&quot;addr\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[155,4],[163,5]]},{\&quot;method_name\&quot;:\&quot;increaseOrderCounters\&quot;,\&quot;method_parameters\&quot;:\&quot;(boolean isPaid)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;isPaid\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[165,4],[169,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/CustomerAddress.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/CustomerAddress.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerAddress.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformFee.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformFee.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformFee.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformTransaction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformTransaction.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformTransaction.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformWallet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/PlatformWallet.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWallet.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Product.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Product.java\&quot;,\&quot;file_name\&quot;:\&quot;Product.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/ProductCombo.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/ProductCombo.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductCombo.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Store.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Store.java\&quot;,\&quot;file_name\&quot;:\&quot;Store.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreKyc.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreKyc.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKyc.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWallet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWallet.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWallet.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWalletTransaction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/StoreWalletTransaction.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletTransaction.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/Wallet.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/Wallet.java\&quot;,\&quot;file_name\&quot;:\&quot;Wallet.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/entity/WalletTransaction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/entity/WalletTransaction.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTransaction.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/exception/ApiError.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/exception/ApiError.java\&quot;,\&quot;file_name\&quot;:\&quot;ApiError.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ApiError\&quot;,\&quot;method_parameters\&quot;:\&quot;(HttpStatus status, String message, List\\u003cString\\u003e errors)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;HttpStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;errors\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[20,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/exception/ExternalApiException.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/exception/ExternalApiException.java\&quot;,\&quot;file_name\&quot;:\&quot;ExternalApiException.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ExternalApiException\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]},{\&quot;method_name\&quot;:\&quot;ExternalApiException\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message, Throwable cause)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;},{\&quot;type\&quot;:\&quot;Throwable\&quot;,\&quot;name\&quot;:\&quot;cause\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/exception/GlobalExceptionHandler.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/exception/GlobalExceptionHandler.java\&quot;,\&quot;file_name\&quot;:\&quot;GlobalExceptionHandler.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;handleMethodArgumentNotValid\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            MethodArgumentNotValidException ex, HttpHeaders headers,\\r\\n            HttpStatusCode status, WebRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;MethodArgumentNotValidException\&quot;,\&quot;name\&quot;:\&quot;ex\&quot;},{\&quot;type\&quot;:\&quot;HttpHeaders\&quot;,\&quot;name\&quot;:\&quot;headers\&quot;},{\&quot;type\&quot;:\&quot;HttpStatusCode\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;WebRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[25,5]]},{\&quot;method_name\&quot;:\&quot;handleExternalApi\&quot;,\&quot;method_parameters\&quot;:\&quot;(ExternalApiException ex)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ExternalApiException\&quot;,\&quot;name\&quot;:\&quot;ex\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;handleAll\&quot;,\&quot;method_parameters\&quot;:\&quot;(Exception ex)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Exception\&quot;,\&quot;name\&quot;:\&quot;ex\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[33,4],[37,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/AccountRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/AccountRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByEmailAndRole\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email, RoleEnum role)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;},{\&quot;type\&quot;:\&quot;RoleEnum\&quot;,\&quot;name\&quot;:\&quot;role\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,70]]},{\&quot;method_name\&quot;:\&quot;existsByEmailAndRole\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email, RoleEnum role)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;},{\&quot;type\&quot;:\&quot;RoleEnum\&quot;,\&quot;name\&quot;:\&quot;role\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[13,4],[13,62]]},{\&quot;method_name\&quot;:\&quot;findByEmailIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,58]]},{\&quot;method_name\&quot;:\&quot;existsByPhone\&quot;,\&quot;method_parameters\&quot;:\&quot;(String phoneNumber)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;phoneNumber\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[15,4],[15,46]]},{\&quot;method_name\&quot;:\&quot;existsByEmailIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[16,4],[16,50]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartItemRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartItemRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;CartItemRepository.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/CartRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;CartRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByCustomerAndStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(Customer customer, CartStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Customer\&quot;,\&quot;name\&quot;:\&quot;customer\&quot;},{\&quot;type\&quot;:\&quot;CartStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[11,81]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/CategoryRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/CategoryRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByName\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,47]]},{\&quot;method_name\&quot;:\&quot;findBySlug\&quot;,\&quot;method_parameters\&quot;:\&quot;(String slug)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;slug\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,47]]},{\&quot;method_name\&quot;:\&quot;existsByName\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[20,38]]},{\&quot;method_name\&quot;:\&quot;findAllByOrderBySortOrderAsc\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[23,50]]},{\&quot;method_name\&quot;:\&quot;findByNameContainingIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,4],[26,66]]},{\&quot;method_name\&quot;:\&quot;findByNameIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[27,4],[27,57]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerAddressRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerAddressRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerAddressRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByCustomerIdOrderByIsDefaultDescCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[10,93]]},{\&quot;method_name\&quot;:\&quot;findByIdAndCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[11,78]]},{\&quot;method_name\&quot;:\&quot;countByCustomerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;long\&quot;,\&quot;scope\&quot;:[[12,4],[12,44]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/CustomerRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;existsByAccount_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[14,4],[14,47]]},{\&quot;method_name\&quot;:\&quot;findByAccount_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[15,56]]},{\&quot;method_name\&quot;:\&quot;findByEmailIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,59]]},{\&quot;method_name\&quot;:\&quot;existsByEmailIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[20,50]]},{\&quot;method_name\&quot;:\&quot;existsByPhoneNumber\&quot;,\&quot;method_parameters\&quot;:\&quot;(String phoneNumber)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;phoneNumber\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[21,4],[21,52]]},{\&quot;method_name\&quot;:\&quot;existsByEmailIgnoreCaseAndIdNot\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email, UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[23,4],[23,67]]},{\&quot;method_name\&quot;:\&quot;existsByPhoneNumberAndIdNot\&quot;,\&quot;method_parameters\&quot;:\&quot;(String phoneNumber, UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;phoneNumber\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[24,4],[24,69]]},{\&quot;method_name\&quot;:\&quot;search\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;kw\\\&quot;) String keyword,\\r\\n                          @Param(\\\&quot;status\\\&quot;) CustomerStatus status,\\r\\n                          Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;CustomerStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,4],[37,45]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformFeeRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformFeeRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformFeeRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByIsActiveTrue\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[8,47]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformTransactionRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformTransactionRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformTransactionRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByStoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[15,58]]},{\&quot;method_name\&quot;:\&quot;findByStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(TransactionStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;TransactionStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,69]]},{\&quot;method_name\&quot;:\&quot;findByType\&quot;,\&quot;method_parameters\&quot;:\&quot;(TransactionType type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;TransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[21,4],[21,63]]},{\&quot;method_name\&quot;:\&quot;findByDateRange\&quot;,\&quot;method_parameters\&quot;:\&quot;(LocalDateTime from, LocalDateTime to)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[24,4],[25,84]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            UUID storeId,\\r\\n            UUID customerId,\\r\\n            TransactionStatus status,\\r\\n            TransactionType type,\\r\\n            LocalDateTime from,\\r\\n            LocalDateTime to\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;TransactionStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;TransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[28,5],[45,6]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformWalletRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/PlatformWalletRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWalletRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByOwnerType\&quot;,\&quot;method_parameters\&quot;:\&quot;(WalletOwnerType ownerType)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;WalletOwnerType\&quot;,\&quot;name\&quot;:\&quot;ownerType\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,68]]},{\&quot;method_name\&quot;:\&quot;findByOwnerTypeAndOwnerId\&quot;,\&quot;method_parameters\&quot;:\&quot;(WalletOwnerType ownerType, UUID ownerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;WalletOwnerType\&quot;,\&quot;name\&quot;:\&quot;ownerType\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;ownerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,96]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductComboRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductComboRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductComboRepository.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/ProductRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findBySku\&quot;,\&quot;method_parameters\&quot;:\&quot;(String sku)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sku\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,44]]},{\&quot;method_name\&quot;:\&quot;findBySlug\&quot;,\&quot;method_parameters\&quot;:\&quot;(String slug)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;slug\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[20,46]]},{\&quot;method_name\&quot;:\&quot;findAllByStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(ProductStatus status, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ProductStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[23,75]]},{\&quot;method_name\&quot;:\&quot;searchByName\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;keyword\\\&quot;) String keyword, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[26,4],[27,84]]},{\&quot;method_name\&quot;:\&quot;findAllByCategoryId\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;categoryId\\\&quot;) UUID categoryId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[31,95]]},{\&quot;method_name\&quot;:\&quot;findAllByStoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;storeId\\\&quot;) UUID storeId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[34,4],[35,86]]},{\&quot;method_name\&quot;:\&quot;findAllByIsFeaturedTrue\&quot;,\&quot;method_parameters\&quot;:\&quot;(Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[38,4],[38,61]]},{\&quot;method_name\&quot;:\&quot;findAllByProductIdIn\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cUUID\\u003e productIds)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;productIds\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[41,4],[41,62]]},{\&quot;method_name\&quot;:\&quot;existsByStore_StoreIdAndSku\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, String sku)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sku\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[46,4],[46,66]]},{\&quot;method_name\&quot;:\&quot;existsBySlug\&quot;,\&quot;method_parameters\&quot;:\&quot;(String slug)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;slug\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[51,4],[51,38]]},{\&quot;method_name\&quot;:\&quot;findByPriceRange\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;minPrice\\\&quot;) double minPrice,\\r\\n                                   @Param(\\\&quot;maxPrice\\\&quot;) double maxPrice,\\r\\n                                   Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;minPrice\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;maxPrice\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[54,4],[57,54]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreKycRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreKycRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKycRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;existsByStore_StoreIdAndStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, KycStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;KycStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[12,4],[12,75]]},{\&quot;method_name\&quot;:\&quot;findByStore_StoreIdOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[15,73]]},{\&quot;method_name\&quot;:\&quot;findByStatusOrderBySubmittedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,72]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByAccount_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[20,53]]},{\&quot;method_name\&quot;:\&quot;existsByAccount_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[22,4],[22,47]]},{\&quot;method_name\&quot;:\&quot;findByAccount_Email\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[25,4],[25,54]]},{\&quot;method_name\&quot;:\&quot;findAllByStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(StoreStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;StoreStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[28,4],[28,52]]},{\&quot;method_name\&quot;:\&quot;existsByStoreName\&quot;,\&quot;method_parameters\&quot;:\&quot;(String storeName)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;storeName\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[31,4],[31,48]]},{\&quot;method_name\&quot;:\&quot;findByStoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[34,4],[34,48]]},{\&quot;method_name\&quot;:\&quot;findByStoreNameContainingIgnoreCase\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,5],[36,88]]},{\&quot;method_name\&quot;:\&quot;findByStoreIdAndStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, StoreStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;StoreStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[39,4],[39,77]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByStore_StoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,60]]},{\&quot;method_name\&quot;:\&quot;existsByStore_StoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[20,4],[20,48]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletTransactionRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/StoreWalletTransactionRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletTransactionRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;(StoreWallet wallet)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;StoreWallet\&quot;,\&quot;name\&quot;:\&quot;wallet\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[20,66]]},{\&quot;method_name\&quot;:\&quot;findByWallet_WalletId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID walletId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[23,89]]},{\&quot;method_name\&quot;:\&quot;findTop1ByWallet_WalletIdOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID walletId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;}],\&quot;return_type\&quot;:\&quot;StoreWalletTransaction\&quot;,\&quot;scope\&quot;:[[26,4],[26,88]]},{\&quot;method_name\&quot;:\&quot;findByWallet_WalletIdOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID walletId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[28,4],[28,109]]},{\&quot;method_name\&quot;:\&quot;findByWallet_WalletIdAndTypeOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            UUID walletId, StoreWalletTransactionType type, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[31,79]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Param(\\\&quot;walletId\\\&quot;) UUID walletId,\\r\\n            @Param(\\\&quot;from\\\&quot;) LocalDateTime from,\\r\\n            @Param(\\\&quot;to\\\&quot;) LocalDateTime to,\\r\\n            @Param(\\\&quot;type\\\&quot;) StoreWalletTransactionType type,\\r\\n            @Param(\\\&quot;transactionId\\\&quot;) UUID transactionId,\\r\\n            Pageable pageable\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;},{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;transactionId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[33,4],[49,6]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;existsByCustomer_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[11,4],[11,49]]},{\&quot;method_name\&quot;:\&quot;findByCustomer_Id\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,56]]},{\&quot;method_name\&quot;:\&quot;findByCustomerIdForUpdate\&quot;,\&quot;method_parameters\&quot;:\&quot;(@Param(\\\&quot;cid\\\&quot;) UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[17,78]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletTransactionRepository.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/repository/WalletTransactionRepository.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletTransactionRepository.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;findByWallet_Customer_IdOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,109]]},{\&quot;method_name\&quot;:\&quot;findFirstByWallet_Customer_IdAndOrderIdAndTransactionTypeOrderByCreatedAtDesc\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            UUID customerId, UUID orderId, WalletTransactionType type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;orderId\&quot;},{\&quot;type\&quot;:\&quot;WalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[15,71]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/CustomOAuth2UserService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/CustomOAuth2UserService.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomOAuth2UserService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;loadUser\&quot;,\&quot;method_parameters\&quot;:\&quot;(OAuth2UserRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;OAuth2UserRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;OAuth2User\&quot;,\&quot;scope\&quot;:[[11,4],[17,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationFailureHandler.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationFailureHandler.java\&quot;,\&quot;file_name\&quot;:\&quot;OAuth2AuthenticationFailureHandler.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onAuthenticationFailure\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            HttpServletRequest request,\\r\\n            HttpServletResponse response,\\r\\n            AuthenticationException exception   // ✅ đúng kiểu yêu cầu\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;HttpServletRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;HttpServletResponse\&quot;,\&quot;name\&quot;:\&quot;response\&quot;},{\&quot;type\&quot;:\&quot;AuthenticationException\&quot;,\&quot;name\&quot;:\&quot;exception\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[28,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationSuccessHandler.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/security/oauth/OAuth2AuthenticationSuccessHandler.java\&quot;,\&quot;file_name\&quot;:\&quot;OAuth2AuthenticationSuccessHandler.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;onAuthenticationSuccess\&quot;,\&quot;method_parameters\&quot;:\&quot;(HttpServletRequest request,\\r\\n                                        HttpServletResponse response,\\r\\n                                        Authentication authentication)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;HttpServletRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;HttpServletResponse\&quot;,\&quot;name\&quot;:\&quot;response\&quot;},{\&quot;type\&quot;:\&quot;Authentication\&quot;,\&quot;name\&quot;:\&quot;authentication\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[31,4],[85,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtFilter.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtFilter.java\&quot;,\&quot;file_name\&quot;:\&quot;JwtFilter.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;doFilterInternal\&quot;,\&quot;method_parameters\&quot;:\&quot;(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;HttpServletRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;HttpServletResponse\&quot;,\&quot;name\&quot;:\&quot;response\&quot;},{\&quot;type\&quot;:\&quot;FilterChain\&quot;,\&quot;name\&quot;:\&quot;filterChain\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[35,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtTokenProvider.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/security/JwtTokenProvider.java\&quot;,\&quot;file_name\&quot;:\&quot;JwtTokenProvider.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;JwtTokenProvider\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            @Value(\\\&quot;${jwt.secret}\\\&quot;) String secretBase64,\\r\\n            @Value(\\\&quot;${jwt.expiration-ms}\\\&quot;) long expiry,\\r\\n            UserDetailsService uds\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;secretBase64\&quot;},{\&quot;type\&quot;:\&quot;long\&quot;,\&quot;name\&quot;:\&quot;expiry\&quot;},{\&quot;type\&quot;:\&quot;UserDetailsService\&quot;,\&quot;name\&quot;:\&quot;uds\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[30,5]]},{\&quot;method_name\&quot;:\&quot;generateToken\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, UUID customerId, String email, String role)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;role\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[33,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;validateToken\&quot;,\&quot;method_parameters\&quot;:\&quot;(String token)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;token\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[48,4],[55,5]]},{\&quot;method_name\&quot;:\&quot;getAuthentication\&quot;,\&quot;method_parameters\&quot;:\&quot;(String token)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;token\&quot;}],\&quot;return_type\&quot;:\&quot;Authentication\&quot;,\&quot;scope\&quot;:[[57,4],[68,5]]},{\&quot;method_name\&quot;:\&quot;getRoleFromToken\&quot;,\&quot;method_parameters\&quot;:\&quot;(String token)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;token\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[70,4],[77,5]]},{\&quot;method_name\&quot;:\&quot;getCustomerIdFromToken\&quot;,\&quot;method_parameters\&quot;:\&quot;(String token)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;token\&quot;}],\&quot;return_type\&quot;:\&quot;UUID\&quot;,\&quot;scope\&quot;:[[79,4],[84,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/AccountServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/AccountServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;registerCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[46,4],[49,5]]},{\&quot;method_name\&quot;:\&quot;registerStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[51,4],[54,5]]},{\&quot;method_name\&quot;:\&quot;registerAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[56,4],[59,5]]},{\&quot;method_name\&quot;:\&quot;register\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request, RoleEnum role, String successMsg)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;RoleEnum\&quot;,\&quot;name\&quot;:\&quot;role\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;successMsg\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[61,4],[107,5]]},{\&quot;method_name\&quot;:\&quot;createDefaultCustomerForAccount\&quot;,\&quot;method_parameters\&quot;:\&quot;(Account account)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Account\&quot;,\&quot;name\&quot;:\&quot;account\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[112,4],[131,5]]},{\&quot;method_name\&quot;:\&quot;createDefaultWalletForCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(Customer customer)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Customer\&quot;,\&quot;name\&quot;:\&quot;customer\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[133,4],[139,5]]},{\&quot;method_name\&quot;:\&quot;createDefaultStoreWithWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;(Account account)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Account\&quot;,\&quot;name\&quot;:\&quot;account\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[142,4],[182,5]]},{\&quot;method_name\&quot;:\&quot;loginCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[185,4],[188,5]]},{\&quot;method_name\&quot;:\&quot;loginStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[190,4],[193,5]]},{\&quot;method_name\&quot;:\&quot;loginAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[195,4],[198,5]]},{\&quot;method_name\&quot;:\&quot;login\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request, RoleEnum role)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;},{\&quot;type\&quot;:\&quot;RoleEnum\&quot;,\&quot;name\&quot;:\&quot;role\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[200,4],[221,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CartServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CartServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;CartServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;addItems\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, AddCartItemsRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;AddCartItemsRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[26,4],[116,5]]},{\&quot;method_name\&quot;:\&quot;getActiveCart\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[118,4],[127,5]]},{\&quot;method_name\&quot;:\&quot;key\&quot;,\&quot;method_parameters\&quot;:\&quot;(CartItemType type, UUID refId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CartItemType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;refId\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[131,4],[133,5]]},{\&quot;method_name\&quot;:\&quot;firstImage\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cString\\u003e images)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;images\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[135,4],[137,5]]},{\&quot;method_name\&quot;:\&quot;recalcTotals\&quot;,\&quot;method_parameters\&quot;:\&quot;(Cart cart)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Cart\&quot;,\&quot;name\&quot;:\&quot;cart\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[139,4],[146,5]]},{\&quot;method_name\&quot;:\&quot;toResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(Cart cart)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Cart\&quot;,\&quot;name\&quot;:\&quot;cart\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[148,4],[170,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CategoryServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CategoryServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllCategories\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;getCategoryById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[29,4],[35,5]]},{\&quot;method_name\&quot;:\&quot;createCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(CategoryRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[37,4],[53,5]]},{\&quot;method_name\&quot;:\&quot;updateCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId, CategoryRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[55,4],[68,5]]},{\&quot;method_name\&quot;:\&quot;deleteCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[70,4],[77,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomerServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomerServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;create\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerCreateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerCreateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[33,4],[57,5]]},{\&quot;method_name\&quot;:\&quot;get\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[59,4],[65,5]]},{\&quot;method_name\&quot;:\&quot;search\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword, CustomerStatus status, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;CustomerStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[67,4],[72,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, CustomerUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;CustomerUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[74,4],[103,5]]},{\&quot;method_name\&quot;:\&quot;softDelete\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[105,4],[110,5]]},{\&quot;method_name\&quot;:\&quot;listAddresses\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[114,4],[120,5]]},{\&quot;method_name\&quot;:\&quot;addAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, AddressCreateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;AddressCreateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[122,4],[152,5]]},{\&quot;method_name\&quot;:\&quot;updateAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId, AddressUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;},{\&quot;type\&quot;:\&quot;AddressUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[154,4],[176,5]]},{\&quot;method_name\&quot;:\&quot;deleteAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[178,4],[193,5]]},{\&quot;method_name\&quot;:\&quot;setDefaultAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[195,4],[201,5]]},{\&quot;method_name\&quot;:\&quot;ensureCustomerExists\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;Customer\&quot;,\&quot;scope\&quot;:[[205,4],[208,5]]},{\&quot;method_name\&quot;:\&quot;setDefaultInternal\&quot;,\&quot;method_parameters\&quot;:\&quot;(Customer c, CustomerAddress target)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Customer\&quot;,\&quot;name\&quot;:\&quot;c\&quot;},{\&quot;type\&quot;:\&quot;CustomerAddress\&quot;,\&quot;name\&quot;:\&quot;target\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[210,4],[216,5]]},{\&quot;method_name\&quot;:\&quot;toCustomerResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(Customer c)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Customer\&quot;,\&quot;name\&quot;:\&quot;c\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[218,4],[243,5]]},{\&quot;method_name\&quot;:\&quot;toAddressResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerAddress a)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerAddress\&quot;,\&quot;name\&quot;:\&quot;a\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[245,4],[262,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomUserDetailsService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/CustomUserDetailsService.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomUserDetailsService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;CustomUserDetailsService\&quot;,\&quot;method_parameters\&quot;:\&quot;(AccountRepository repo)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;AccountRepository\&quot;,\&quot;name\&quot;:\&quot;repo\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[22,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;loadUserByUsername\&quot;,\&quot;method_parameters\&quot;:\&quot;(String usernameWithRole)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;usernameWithRole\&quot;}],\&quot;return_type\&quot;:\&quot;UserDetails\&quot;,\&quot;scope\&quot;:[[26,4],[48,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/DomainProvisioningService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/DomainProvisioningService.java\&quot;,\&quot;file_name\&quot;:\&quot;DomainProvisioningService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ensureCustomerAndWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;(Account account)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Account\&quot;,\&quot;name\&quot;:\&quot;account\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,4],[50,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformFeeServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformFeeServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformFeeServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;create\&quot;,\&quot;method_parameters\&quot;:\&quot;(PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[17,4],[29,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[31,4],[39,5]]},{\&quot;method_name\&quot;:\&quot;getActiveFee\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[41,4],[45,5]]},{\&quot;method_name\&quot;:\&quot;getAll\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[47,4],[50,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformWalletServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/PlatformWalletServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWalletServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;mapToWalletResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(PlatformWallet wallet, boolean includeTransactions)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PlatformWallet\&quot;,\&quot;name\&quot;:\&quot;wallet\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;includeTransactions\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformWalletResponse\&quot;,\&quot;scope\&quot;:[[27,4],[49,5]]},{\&quot;method_name\&quot;:\&quot;mapToTransactionResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(PlatformTransaction tx)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PlatformTransaction\&quot;,\&quot;name\&quot;:\&quot;tx\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformTransactionResponse\&quot;,\&quot;scope\&quot;:[[51,4],[64,5]]},{\&quot;method_name\&quot;:\&quot;getAllWallets\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[68,4],[74,5]]},{\&quot;method_name\&quot;:\&quot;getWalletByOwner\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID ownerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;ownerId\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformWalletResponse\&quot;,\&quot;scope\&quot;:[[76,4],[85,5]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        UUID storeId,\\r\\n        UUID customerId,\\r\\n        TransactionStatus status,\\r\\n        TransactionType type,\\r\\n        LocalDateTime from,\\r\\n        LocalDateTime to\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;TransactionStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;TransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[87,4],[100,1]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductComboServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductComboServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductComboServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;createCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(CreateComboRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CreateComboRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[36,4],[98,5]]},{\&quot;method_name\&quot;:\&quot;getComboById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[103,4],[109,5]]},{\&quot;method_name\&quot;:\&quot;getAllCombos\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String keyword,\\r\\n                                                     String sortDir, BigDecimal minPrice, BigDecimal maxPrice, Boolean isActive)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sortDir\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;minPrice\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;maxPrice\&quot;},{\&quot;type\&quot;:\&quot;Boolean\&quot;,\&quot;name\&quot;:\&quot;isActive\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[114,4],[133,5]]},{\&quot;method_name\&quot;:\&quot;getCombosByStoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, int page, int size,\\r\\n                                                           String keyword, String sortDir,\\r\\n                                                           BigDecimal minPrice, BigDecimal maxPrice)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sortDir\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;minPrice\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;maxPrice\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[138,4],[158,5]]},{\&quot;method_name\&quot;:\&quot;updateCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId, UpdateComboRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;},{\&quot;type\&quot;:\&quot;UpdateComboRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[163,4],[209,5]]},{\&quot;method_name\&quot;:\&quot;disableCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[214,4],[225,5]]},{\&quot;method_name\&quot;:\&quot;getProductsInCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[230,4],[235,5]]},{\&quot;method_name\&quot;:\&quot;buildResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(ProductCombo combo, Category category)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ProductCombo\&quot;,\&quot;name\&quot;:\&quot;combo\&quot;},{\&quot;type\&quot;:\&quot;Category\&quot;,\&quot;name\&quot;:\&quot;category\&quot;}],\&quot;return_type\&quot;:\&quot;ComboResponse\&quot;,\&quot;scope\&quot;:[[240,4],[268,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/ProductServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;generateUniqueSlug\&quot;,\&quot;method_parameters\&quot;:\&quot;(String productName)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;productName\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[33,4],[48,5]]},{\&quot;method_name\&quot;:\&quot;createProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(ProductRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[53,4],[95,5]]},{\&quot;method_name\&quot;:\&quot;updateProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, ProductRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[100,4],[140,5]]},{\&quot;method_name\&quot;:\&quot;disableProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[145,4],[153,5]]},{\&quot;method_name\&quot;:\&quot;getAllProducts\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n            UUID categoryId, UUID storeId, String keyword, int page, int size, ProductStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;ProductStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[158,4],[174,5]]},{\&quot;method_name\&quot;:\&quot;getProductById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[176,4],[181,5]]},{\&quot;method_name\&quot;:\&quot;toResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(Product p)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Product\&quot;,\&quot;name\&quot;:\&quot;p\&quot;}],\&quot;return_type\&quot;:\&quot;ProductResponse\&quot;,\&quot;scope\&quot;:[[186,4],[227,5]]},{\&quot;method_name\&quot;:\&quot;applyRequestToProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(Product p, ProductRequest r)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Product\&quot;,\&quot;name\&quot;:\&quot;p\&quot;},{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;r\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[232,4],[262,5]]},{\&quot;method_name\&quot;:\&quot;calculatePrice\&quot;,\&quot;method_parameters\&quot;:\&quot;(Product p)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Product\&quot;,\&quot;name\&quot;:\&quot;p\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[267,4],[283,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreKycServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreKycServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKycServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;submitKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, StoreKycRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;StoreKycRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;StoreKyc\&quot;,\&quot;scope\&quot;:[[34,4],[94,5]]},{\&quot;method_name\&quot;:\&quot;approveKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[97,4],[150,5]]},{\&quot;method_name\&quot;:\&quot;rejectKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId, String reason)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;reason\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[153,4],[181,5]]},{\&quot;method_name\&quot;:\&quot;getAllRequestsOfStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[184,4],[187,5]]},{\&quot;method_name\&quot;:\&quot;getRequestDetail\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;}],\&quot;return_type\&quot;:\&quot;StoreKyc\&quot;,\&quot;scope\&quot;:[[189,4],[193,5]]},{\&quot;method_name\&quot;:\&quot;getRequestsByStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[195,4],[198,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;updateStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, UpdateStoreRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UpdateStoreRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[30,4],[74,5]]},{\&quot;method_name\&quot;:\&quot;getStoreById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[76,4],[96,5]]},{\&quot;method_name\&quot;:\&quot;getStoreByAccountId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[98,4],[118,5]]},{\&quot;method_name\&quot;:\&quot;updateStoreStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, StoreStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;StoreStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[121,4],[130,5]]},{\&quot;method_name\&quot;:\&quot;getAllStores\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String keyword)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[132,4],[175,5]]},{\&quot;method_name\&quot;:\&quot;getStoreByEmail\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[177,4],[180,1]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreWalletServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/StoreWalletServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getMyWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[37,4],[63,5]]},{\&quot;method_name\&quot;:\&quot;getMyWalletTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[68,4],[110,5]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        UUID walletId,\\r\\n        LocalDateTime from,\\r\\n        LocalDateTime to,\\r\\n        StoreWalletTransactionType type,\\r\\n        UUID transactionId,\\r\\n        Pageable pageable\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;},{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;transactionId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[115,4],[141,1]]},{\&quot;method_name\&quot;:\&quot;getCurrentStoreWalletId\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;UUID\&quot;,\&quot;scope\&quot;:[[146,0],[157,1]]},{\&quot;method_name\&quot;:\&quot;mapToTransactionResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(StoreWalletTransaction tx)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;StoreWalletTransaction\&quot;,\&quot;name\&quot;:\&quot;tx\&quot;}],\&quot;return_type\&quot;:\&quot;StoreWalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[159,4],[171,1]]},{\&quot;method_name\&quot;:\&quot;getDisplayName\&quot;,\&quot;method_parameters\&quot;:\&quot;(StoreWalletTransactionType type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[174,0],[184,1]]},{\&quot;method_name\&quot;:\&quot;resolveWalletIdForCurrentUser\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;UUID\&quot;,\&quot;scope\&quot;:[[186,0],[198,1]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/UploadService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/UploadService.java\&quot;,\&quot;file_name\&quot;:\&quot;UploadService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;uploadImage\&quot;,\&quot;method_parameters\&quot;:\&quot;(MultipartFile file)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;MultipartFile\&quot;,\&quot;name\&quot;:\&quot;file\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[16,4],[20,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/WalletServiceImpl.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/Impl/WalletServiceImpl.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletServiceImpl.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getByCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;WalletResponse\&quot;,\&quot;scope\&quot;:[[30,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;deposit\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[38,4],[41,5]]},{\&quot;method_name\&quot;:\&quot;withdraw\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[43,4],[46,5]]},{\&quot;method_name\&quot;:\&quot;payment\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[48,4],[57,5]]},{\&quot;method_name\&quot;:\&quot;refund\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[59,4],[64,5]]},{\&quot;method_name\&quot;:\&quot;listTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[66,4],[71,5]]},{\&quot;method_name\&quot;:\&quot;doChangeBalance\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req,\\r\\n                                                      WalletTransactionType type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;},{\&quot;type\&quot;:\&quot;WalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[74,4],[118,5]]},{\&quot;method_name\&quot;:\&quot;toWalletResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(Wallet w)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Wallet\&quot;,\&quot;name\&quot;:\&quot;w\&quot;}],\&quot;return_type\&quot;:\&quot;WalletResponse\&quot;,\&quot;scope\&quot;:[[121,4],[130,5]]},{\&quot;method_name\&quot;:\&quot;toTxnResponse\&quot;,\&quot;method_parameters\&quot;:\&quot;(WalletTransaction t)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;WalletTransaction\&quot;,\&quot;name\&quot;:\&quot;t\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[132,4],[145,5]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/AccountService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/AccountService.java\&quot;,\&quot;file_name\&quot;:\&quot;AccountService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;registerCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[9,75]]},{\&quot;method_name\&quot;:\&quot;loginCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[10,69]]},{\&quot;method_name\&quot;:\&quot;registerStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[13,72]]},{\&quot;method_name\&quot;:\&quot;loginStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,66]]},{\&quot;method_name\&quot;:\&quot;registerAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(RegisterRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;RegisterRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,72]]},{\&quot;method_name\&quot;:\&quot;loginAdmin\&quot;,\&quot;method_parameters\&quot;:\&quot;(LoginRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;LoginRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,66]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/CartService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/CartService.java\&quot;,\&quot;file_name\&quot;:\&quot;CartService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;addItems\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, AddCartItemsRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;AddCartItemsRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[8,4],[8,72]]},{\&quot;method_name\&quot;:\&quot;getActiveCart\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;CartResponse\&quot;,\&quot;scope\&quot;:[[9,4],[9,48]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/CategoryService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/CategoryService.java\&quot;,\&quot;file_name\&quot;:\&quot;CategoryService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllCategories\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[9,66]]},{\&quot;method_name\&quot;:\&quot;getCategoryById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[10,66]]},{\&quot;method_name\&quot;:\&quot;createCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(CategoryRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[11,73]]},{\&quot;method_name\&quot;:\&quot;updateCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId, CategoryRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;CategoryRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,90]]},{\&quot;method_name\&quot;:\&quot;deleteCategory\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID categoryId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[13,65]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/CustomerService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/CustomerService.java\&quot;,\&quot;file_name\&quot;:\&quot;CustomerService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;create\&quot;,\&quot;method_parameters\&quot;:\&quot;(CustomerCreateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CustomerCreateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[12,4],[12,55]]},{\&quot;method_name\&quot;:\&quot;get\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[13,4],[13,34]]},{\&quot;method_name\&quot;:\&quot;search\&quot;,\&quot;method_parameters\&quot;:\&quot;(String keyword, CustomerStatus status, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;CustomerStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,92]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, CustomerUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;CustomerUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;CustomerResponse\&quot;,\&quot;scope\&quot;:[[15,4],[15,64]]},{\&quot;method_name\&quot;:\&quot;softDelete\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[16,29]]},{\&quot;method_name\&quot;:\&quot;listAddresses\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[19,57]]},{\&quot;method_name\&quot;:\&quot;addAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, AddressCreateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;AddressCreateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[20,4],[20,74]]},{\&quot;method_name\&quot;:\&quot;updateAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId, AddressUpdateRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;},{\&quot;type\&quot;:\&quot;AddressUpdateRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;AddressResponse\&quot;,\&quot;scope\&quot;:[[21,4],[21,93]]},{\&quot;method_name\&quot;:\&quot;deleteAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[22,4],[22,56]]},{\&quot;method_name\&quot;:\&quot;setDefaultAddress\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, UUID addressId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;addressId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[23,60]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformFeeService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformFeeService.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformFeeService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;create\&quot;,\&quot;method_parameters\&quot;:\&quot;(PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[7,4],[7,40]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID id, PlatformFee fee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;id\&quot;},{\&quot;type\&quot;:\&quot;PlatformFee\&quot;,\&quot;name\&quot;:\&quot;fee\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[8,4],[8,49]]},{\&quot;method_name\&quot;:\&quot;getActiveFee\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;PlatformFee\&quot;,\&quot;scope\&quot;:[[9,4],[9,31]]},{\&quot;method_name\&quot;:\&quot;getAll\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[10,31]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformWalletService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/PlatformWalletService.java\&quot;,\&quot;file_name\&quot;:\&quot;PlatformWalletService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getAllWallets\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,49]]},{\&quot;method_name\&quot;:\&quot;getWalletByOwner\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID ownerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;ownerId\&quot;}],\&quot;return_type\&quot;:\&quot;PlatformWalletResponse\&quot;,\&quot;scope\&quot;:[[17,4],[17,58]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        UUID storeId,\\r\\n        UUID customerId,\\r\\n        TransactionStatus status,\\r\\n        TransactionType type,\\r\\n        LocalDateTime from,\\r\\n        LocalDateTime to\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;TransactionStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;},{\&quot;type\&quot;:\&quot;TransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[27,2]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductComboService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductComboService.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductComboService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;createCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(CreateComboRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;CreateComboRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[12,73]]},{\&quot;method_name\&quot;:\&quot;getComboById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[13,60]]},{\&quot;method_name\&quot;:\&quot;getAllCombos\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String keyword,\\r\\n                                              String sortDir, BigDecimal minPrice, BigDecimal maxPrice,  Boolean isActive)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sortDir\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;minPrice\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;maxPrice\&quot;},{\&quot;type\&quot;:\&quot;Boolean\&quot;,\&quot;name\&quot;:\&quot;isActive\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[15,123]]},{\&quot;method_name\&quot;:\&quot;getCombosByStoreId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, int page, int size,\\r\\n                                                    String keyword, String sortDir, BigDecimal minPrice, BigDecimal maxPrice)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;sortDir\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;minPrice\&quot;},{\&quot;type\&quot;:\&quot;BigDecimal\&quot;,\&quot;name\&quot;:\&quot;maxPrice\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[16,4],[17,126]]},{\&quot;method_name\&quot;:\&quot;updateCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId, UpdateComboRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;},{\&quot;type\&quot;:\&quot;UpdateComboRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,87]]},{\&quot;method_name\&quot;:\&quot;disableCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[19,60]]},{\&quot;method_name\&quot;:\&quot;getProductsInCombo\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID comboId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;comboId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[20,66]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/ProductService.java\&quot;,\&quot;file_name\&quot;:\&quot;ProductService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;createProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(ProductRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[10,71]]},{\&quot;method_name\&quot;:\&quot;getAllProducts\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        UUID categoryId,\\r\\n        UUID storeId,\\r\\n        String keyword,\\r\\n        int page,\\r\\n        int size,\\r\\n        ProductStatus status\\r\\n)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;categoryId\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;ProductStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[18,2]]},{\&quot;method_name\&quot;:\&quot;getProductById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[19,64]]},{\&quot;method_name\&quot;:\&quot;updateProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID productId, ProductRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;},{\&quot;type\&quot;:\&quot;ProductRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[20,4],[20,87]]},{\&quot;method_name\&quot;:\&quot;disableProduct\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID productId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;productId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[21,4],[21,64]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreKycService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreKycService.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreKycService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;submitKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, StoreKycRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;StoreKycRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;StoreKyc\&quot;,\&quot;scope\&quot;:[[10,4],[10,62]]},{\&quot;method_name\&quot;:\&quot;approveKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[11,34]]},{\&quot;method_name\&quot;:\&quot;rejectKyc\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId, String reason)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;reason\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[12,4],[12,48]]},{\&quot;method_name\&quot;:\&quot;getAllRequestsOfStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[15,56]]},{\&quot;method_name\&quot;:\&quot;getRequestDetail\&quot;,\&quot;method_parameters\&quot;:\&quot;(String kycId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kycId\&quot;}],\&quot;return_type\&quot;:\&quot;StoreKyc\&quot;,\&quot;scope\&quot;:[[16,4],[16,44]]},{\&quot;method_name\&quot;:\&quot;getRequestsByStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(KycStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;KycStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,57]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreService.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getStoreById\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[13,60]]},{\&quot;method_name\&quot;:\&quot;getStoreByAccountId\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID accountId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;accountId\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[15,69]]},{\&quot;method_name\&quot;:\&quot;updateStore\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, UpdateStoreRequest request)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;UpdateStoreRequest\&quot;,\&quot;name\&quot;:\&quot;request\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[17,4],[17,87]]},{\&quot;method_name\&quot;:\&quot;updateStoreStatus\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID storeId, StoreStatus status)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;storeId\&quot;},{\&quot;type\&quot;:\&quot;StoreStatus\&quot;,\&quot;name\&quot;:\&quot;status\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[19,85]]},{\&quot;method_name\&quot;:\&quot;getAllStores\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String keyword)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;keyword\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[21,4],[21,82]]},{\&quot;method_name\&quot;:\&quot;getStoreByEmail\&quot;,\&quot;method_parameters\&quot;:\&quot;(String email)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;email\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[23,50]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreWalletService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/StoreWalletService.java\&quot;,\&quot;file_name\&quot;:\&quot;StoreWalletService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getMyWallet\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[14,47]]},{\&quot;method_name\&quot;:\&quot;getMyWalletTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(int page, int size, String type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;page\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;size\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[16,4],[16,90]]},{\&quot;method_name\&quot;:\&quot;filterTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(\\r\\n        UUID walletId,\\r\\n        LocalDateTime from,\\r\\n        LocalDateTime to,\\r\\n        StoreWalletTransactionType type,\\r\\n        UUID transactionId,\\r\\n        Pageable pageable\\r\\n    )\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;walletId\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;from\&quot;},{\&quot;type\&quot;:\&quot;LocalDateTime\&quot;,\&quot;name\&quot;:\&quot;to\&quot;},{\&quot;type\&quot;:\&quot;StoreWalletTransactionType\&quot;,\&quot;name\&quot;:\&quot;type\&quot;},{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;transactionId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[25,6]]},{\&quot;method_name\&quot;:\&quot;resolveWalletIdForCurrentUser\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;UUID\&quot;,\&quot;scope\&quot;:[[27,4],[27,41]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/service/WalletService.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/service/WalletService.java\&quot;,\&quot;file_name\&quot;:\&quot;WalletService.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getByCustomer\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;}],\&quot;return_type\&quot;:\&quot;WalletResponse\&quot;,\&quot;scope\&quot;:[[11,4],[11,50]]},{\&quot;method_name\&quot;:\&quot;deposit\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[13,4],[13,77]]},{\&quot;method_name\&quot;:\&quot;withdraw\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[14,4],[14,78]]},{\&quot;method_name\&quot;:\&quot;payment\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[15,4],[15,77]]},{\&quot;method_name\&quot;:\&quot;refund\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, WalletTxnRequest req)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;WalletTxnRequest\&quot;,\&quot;name\&quot;:\&quot;req\&quot;}],\&quot;return_type\&quot;:\&quot;WalletTransactionResponse\&quot;,\&quot;scope\&quot;:[[16,4],[16,76]]},{\&quot;method_name\&quot;:\&quot;listTransactions\&quot;,\&quot;method_parameters\&quot;:\&quot;(UUID customerId, Pageable pageable)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;UUID\&quot;,\&quot;name\&quot;:\&quot;customerId\&quot;},{\&quot;type\&quot;:\&quot;Pageable\&quot;,\&quot;name\&quot;:\&quot;pageable\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[18,89]]}]},\&quot;/src/main/java/org/example/audio_ecommerce/AudioECommerceApplication.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/java/org/example/audio_ecommerce/AudioECommerceApplication.java\&quot;,\&quot;file_name\&quot;:\&quot;AudioECommerceApplication.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[10,4],[12,5]]}]},\&quot;/src/main/resources/templates/email/account_created.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/account_created.html\&quot;,\&quot;file_name\&quot;:\&quot;account_created.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/kyc_approved.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/kyc_approved.html\&quot;,\&quot;file_name\&quot;:\&quot;kyc_approved.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/kyc_rejected.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/kyc_rejected.html\&quot;,\&quot;file_name\&quot;:\&quot;kyc_rejected.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/kyc_submitted.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/kyc_submitted.html\&quot;,\&quot;file_name\&quot;:\&quot;kyc_submitted.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/welcome_admin.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/welcome_admin.html\&quot;,\&quot;file_name\&quot;:\&quot;welcome_admin.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/welcome_customer.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/welcome_customer.html\&quot;,\&quot;file_name\&quot;:\&quot;welcome_customer.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/main/resources/templates/email/welcome_store.html\&quot;:{\&quot;file_path\&quot;:\&quot;/src/main/resources/templates/email/welcome_store.html\&quot;,\&quot;file_name\&quot;:\&quot;welcome_store.html\&quot;,\&quot;methods\&quot;:[]},\&quot;/src/test/java/org/example/audio_ecommerce/AudioECommerceApplicationTests.java\&quot;:{\&quot;file_path\&quot;:\&quot;/src/test/java/org/example/audio_ecommerce/AudioECommerceApplicationTests.java\&quot;,\&quot;file_name\&quot;:\&quot;AudioECommerceApplicationTests.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;contextLoads\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[8,4],[10,5]]}]},\&quot;/HELP.md\&quot;:{\&quot;file_path\&quot;:\&quot;/HELP.md\&quot;,\&quot;file_name\&quot;:\&quot;HELP.md\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>