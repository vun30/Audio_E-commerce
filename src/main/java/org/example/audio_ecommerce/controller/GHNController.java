package org.example.audio_ecommerce.controller;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import org.example.audio_ecommerce.dto.request.GhnFeeRequest;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

@RestController
@RequestMapping("/api/ghn")
@RequiredArgsConstructor
@Tag(name = "GHN API", description = "Proxy API cho GHN - tr·∫£ JSON g·ªëc (y h·ªát Postman)")
public class GHNController {

    private final RestTemplate restTemplate;

    // ‚úÖ L·∫•y t·ª´ application.yml
    @Value("${ghn.token}")
    private String ghnToken;

    @Value("${ghn.shopId}")
    private String ghnShopId;

    private static final String BASE_URL = "https://online-gateway.ghn.vn/shiip/public-api";

    // H√†m t·∫°o Header GHN
    private HttpHeaders createHeaders(boolean includeShopId) {
        HttpHeaders headers = new HttpHeaders();
        headers.set("Token", ghnToken);
        if (includeShopId) headers.set("ShopId", ghnShopId);
        headers.setContentType(MediaType.APPLICATION_JSON);
        return headers;
    }

    // ==========================================================
    // 1Ô∏è‚É£ L·∫§Y DANH S√ÅCH T·ªàNH/TH√ÄNH
    // ==========================================================
    @Operation(summary = "L·∫•y danh s√°ch T·ªânh/Th√†nh", description = "Tr·∫£ v·ªÅ nguy√™n JSON t·ª´ GHN")
    @GetMapping("/provinces")
    public ResponseEntity<String> getProvinces() {
        HttpEntity<String> entity = new HttpEntity<>(createHeaders(false));
        ResponseEntity<String> response = restTemplate.exchange(
                BASE_URL + "/master-data/province",
                HttpMethod.GET,
                entity,
                String.class
        );
        return ResponseEntity.status(response.getStatusCode())
                .contentType(MediaType.APPLICATION_JSON)
                .body(response.getBody());
    }

    // ==========================================================
    // 2Ô∏è‚É£ L·∫§Y DANH S√ÅCH QU·∫¨N/HUY·ªÜN
    // ==========================================================
    @Operation(summary = "L·∫•y danh s√°ch Qu·∫≠n/Huy·ªán", description = "Body m·∫´u: { \"province_id\": 202 }")
    @PostMapping("/districts")
    public ResponseEntity<String> getDistricts(@RequestBody String body) {
        HttpEntity<String> entity = new HttpEntity<>(body, createHeaders(false));
        ResponseEntity<String> response = restTemplate.exchange(
                BASE_URL + "/master-data/district",
                HttpMethod.POST,
                entity,
                String.class
        );
        return ResponseEntity.status(response.getStatusCode())
                .contentType(MediaType.APPLICATION_JSON)
                .body(response.getBody());
    }

    // ==========================================================
    // 3Ô∏è‚É£ L·∫§Y DANH S√ÅCH PH∆Ø·ªúNG/X√É
    // ==========================================================
    @Operation(summary = "L·∫•y danh s√°ch Ph∆∞·ªùng/X√£", description = "Body m·∫´u: { \"district_id\": 3695 }")
    @PostMapping("/wards")
    public ResponseEntity<String> getWards(@RequestBody String body) {
        String districtId = body.replaceAll("\\D+", ""); // t√°ch s·ªë
        HttpEntity<String> entity = new HttpEntity<>(body, createHeaders(false));
        ResponseEntity<String> response = restTemplate.exchange(
                BASE_URL + "/master-data/ward?district_id=" + districtId,
                HttpMethod.POST,
                entity,
                String.class
        );
        return ResponseEntity.status(response.getStatusCode())
                .contentType(MediaType.APPLICATION_JSON)
                .body(response.getBody());
    }

    // ==========================================================
    // 4Ô∏è‚É£ T√çNH PH√ç V·∫¨N CHUY·ªÇN
    // ==========================================================

    @Operation(
            summary = "T√≠nh ph√≠ d·ªãch v·ª• (GHN Shipping Fee)",
            description = """
                    üß≠ **M·ª•c ƒë√≠ch:**  
                    S·ª≠ d·ª•ng API n√†y ƒë·ªÉ **t√≠nh ph√≠ d·ªãch v·ª• tr∆∞·ªõc khi t·∫°o ƒë∆°n h√†ng GHN.**

                    ‚ö†Ô∏è **L∆∞u √Ω:**  
                    - C·∫ßn truy·ªÅn **Token** v√† **ShopId** trong header.  
                    - ShopId v√† Token ph·∫£i thu·ªôc c√πng m·ªôt t√†i kho·∫£n GHN.  
                    - API c√≥ 2 m√¥i tr∆∞·ªùng:  
                      ‚Ä¢ **Production:** https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee  
                      ‚Ä¢ **Test:** https://dev-online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee  

                    üß© **V√≠ d·ª• curl (test):**
                    ```
                    curl --location 'https://dev-online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee' \\
                    --header 'Content-Type: application/json' \\
                    --header 'Token: <TOKEN>' \\
                    --header 'ShopId: <SHOP_ID>' \\
                    --data '{
                         "service_type_id": 5,
                         "from_district_id": 3695,
                         "from_ward_code": "90768",
                         "to_district_id": 3440,
                         "to_ward_code": "13010",
                         "length": 30,
                         "width": 40,
                         "height": 20,
                         "weight": 3000,
                         "insurance_value": 0,
                         "coupon": null,
                         "items": [
                             {
                                 "name": "TEST1",
                                 "quantity": 1,
                                 "length": 200,
                                 "width": 200,
                                 "height": 200,
                                 "weight": 1000
                             }
                         ]
                     }'
                    ```

                    ---
                    ### üß± **C·∫•u tr√∫c Request**

                    | Tr∆∞·ªùng | B·∫Øt bu·ªôc | Ki·ªÉu | M√¥ t·∫£ |
                    |---------|-----------|------|-------|
                    | token | ‚úî | String | Token GHN d√πng ƒë·ªÉ x√°c th·ª±c t√†i kho·∫£n |
                    | shop_id | ‚úî | Int | M√£ ƒë·ªãnh danh c·ª≠a h√†ng |
                    | service_type_id | ‚ùå | Int | 2: H√†ng nh·∫π, 5: H√†ng n·∫∑ng |
                    | insurance_value | ‚ùå | Int | Gi√° tr·ªã b·∫£o hi·ªÉm ƒë∆°n h√†ng (t·ªëi ƒëa 5.000.000) |
                    | coupon | ‚ùå | String | M√£ gi·∫£m gi√° GHN |
                    | from_district_id | ‚ùå | Int | Qu·∫≠n/huy·ªán ng∆∞·ªùi g·ª≠i |
                    | from_ward_code | ‚ùå | String | Ph∆∞·ªùng/x√£ ng∆∞·ªùi g·ª≠i |
                    | to_district_id | ‚úî | Int | Qu·∫≠n/huy·ªán ng∆∞·ªùi nh·∫≠n |
                    | to_ward_code | ‚úî | String | Ph∆∞·ªùng/x√£ ng∆∞·ªùi nh·∫≠n |
                    | weight | ‚úî | Int | Kh·ªëi l∆∞·ª£ng ƒë∆°n h√†ng (gram) |
                    | length | ‚ùå | Int | Chi·ªÅu d√†i (cm) |
                    | width | ‚ùå | Int | Chi·ªÅu r·ªông (cm) |
                    | height | ‚ùå | Int | Chi·ªÅu cao (cm) |
                    | items | ‚úî | Array | Danh s√°ch s·∫£n ph·∫©m (b·∫Øt bu·ªôc v·ªõi h√†ng n·∫∑ng) |
                    | items[].name | ‚úî | String | T√™n s·∫£n ph·∫©m |
                    | items[].quantity | ‚úî | Int | S·ªë l∆∞·ª£ng |
                    | items[].length | ‚úî | Int | Chi·ªÅu d√†i |
                    | items[].width | ‚úî | Int | Chi·ªÅu r·ªông |
                    | items[].height | ‚úî | Int | Chi·ªÅu cao |
                    | items[].weight | ‚úî | Int | Kh·ªëi l∆∞·ª£ng |
                    """,
            responses = {
                    @ApiResponse(
                            responseCode = "200",
                            description = "Th√†nh c√¥ng - Tr·∫£ JSON g·ªëc GHN",
                            content = @Content(mediaType = "application/json", schema = @Schema(example = """
                            {
                              "code": 200,
                              "message": "Success",
                              "data": {
                                "total": 36300,
                                "service_fee": 36300,
                                "insurance_fee": 0,
                                "pick_station_fee": 0,
                                "coupon_value": 0,
                                "r2s_fee": 0,
                                "cod_fee": 0
                              }
                            }
                            """))
                    ),
                    @ApiResponse(responseCode = "400", description = "L·ªói: Token ho·∫∑c ShopId kh√¥ng h·ª£p l·ªá (CLIENT_NOT_BELONG_OF_SHOP)")
            }
    )
    @PostMapping("/fee")
    public ResponseEntity<String> calculateFee(@RequestBody GhnFeeRequest request) {
        HttpEntity<GhnFeeRequest> entity = new HttpEntity<>(request, createHeaders(true));
        ResponseEntity<String> response = restTemplate.exchange(
                BASE_URL + "/v2/shipping-order/fee",
                HttpMethod.POST,
                entity,
                String.class
        );
        return ResponseEntity.status(response.getStatusCode())
                .contentType(MediaType.APPLICATION_JSON)
                .body(response.getBody());
    }
}
