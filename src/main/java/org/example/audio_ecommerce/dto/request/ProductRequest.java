package org.example.audio_ecommerce.dto.request;

import lombok.*;
import java.math.BigDecimal;
import java.util.List;
import java.util.UUID;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ProductRequest {

    // ======================
    // üîó Li√™n k·∫øt
    // ======================
    private UUID storeId;          // ID c·ª≠a h√†ng m√† s·∫£n ph·∫©m thu·ªôc v·ªÅ
    private UUID categoryId;       // ID danh m·ª•c s·∫£n ph·∫©m
    private String brandName;

    // ======================
    // üîñ Th√¥ng tin c∆° b·∫£n
    // ======================
    private String name;
    private String slug;
    private String shortDescription;
    private String description;
    private String model;
    private String color;
    private String material;
    private String dimensions;
    private BigDecimal weight;

    // ======================
    // üì∏ Media
    // ======================
    private List<String> images;
    private String videoUrl;

    // ======================
    // üíµ Gi√° & Kho
    // ======================
    private String sku;
    private BigDecimal price;
    private BigDecimal discountPrice;
    private String currency;
    private Integer stockQuantity;
    private String warehouseLocation;
    private String shippingAddress;

    // =========================
    // üîä Loa (Speaker)
    // =========================
    private String driverConfiguration;
    private String driverSize;
    private String frequencyResponse;
    private String sensitivity;
    private String impedance;
    private String powerHandling;
    private String enclosureType;
    private String coveragePattern;
    private String crossoverFrequency;
    private String placementType;
    private String connectionType;

    // =========================
    // üé§ Microphone
    // =========================
    private String micType;
    private String polarPattern;
    private String maxSPL;
    private String micOutputImpedance;
    private String micSensitivity;

    // =========================
    // üìª Receiver / Amplifier
    // =========================
    private String amplifierType;
    private String totalPowerOutput;
    private String thd;
    private String snr;
    private Integer inputChannels;
    private Integer outputChannels;
    private Boolean supportBluetooth;
    private Boolean supportWifi;
    private Boolean supportAirplay;

    // =========================
    // üìÄ Turntable
    // =========================
    private String platterMaterial;
    private String motorType;
    private String tonearmType;
    private Boolean autoReturn;

    // =========================
    // üéõÔ∏è DAC / Sound Card
    // =========================
    private String dacChipset;
    private String sampleRate;
    private String bitDepth;
    private Boolean balancedOutput;
    private String inputInterface;
    private String outputInterface;

    // =========================
    // üéöÔ∏è Mixer / DJ Controller
    // =========================
    private Integer channelCount;
    private Boolean hasPhantomPower;
    private String eqBands;
    private String faderType;
    private Boolean builtInEffects;
    private Boolean usbAudioInterface;
    private Boolean midiSupport;
}
